/*! dustjs-linkedin - v2.7.2
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.2"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},Context.wrap=function(a,b){return a instanceof Context?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.3
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?module.exports=b(require("dustjs-linkedin")):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return i(n||e)},f,f.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=p(this.path,this.keys=[],t)}function c(e){if(1===u(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&f(t.href)){var o=t.pathname+t.search+(t.hash||"");void 0!==n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function u(e){return e=e||window.event,null===e.which?e.button:e.which}function f(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var p=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){if(0===arguments.length)return g;g=e},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,c,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,c,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&void 0===t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];if(!e)return n();e(o,t)}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){if(t.match(n.path,n.params))return e(n,r);r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,c=a.length;s<c;++s){var u=n[s-1],f=o(a[s]);void 0===f&&hasOwnProperty.call(t,u.name)||(t[u.name]=f)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=f}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div");return new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})}).observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){r.shift()()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],c=t[1],u=t.index;if(o+=e.slice(i,u),i=u+a.length,c)o+=c[1];else{o&&(n.push(o),o="");var f=t[2],p=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=f||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:p||r++,prefix:f||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,c=i[a.name];if(null==c){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(c)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+c+'"');if(0===c.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(s=encodeURIComponent(c[u]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===u?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(c),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function u(e){return e.sensitive?"":"i"}function f(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return c(e,t)}function p(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",u(n)),t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return c(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=!1!==t.end,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),c=0;c<e.length;c++){var f=e[c];if("string"==typeof f)i+=a(f);else{var p=a(f.prefix),h=f.pattern;f.repeat&&(h+="(?:"+p+h+")*"),h=f.optional?p?"(?:"+p+"("+h+"))?":"("+h+")?":p+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,u(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?f(e,t,n):v(e)?p(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
/*!
 * EventEmitter v5.0.0 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - http://oli.me.uk/
 * @preserve
 */
(function(){"use strict";function t(){}function i(t,n){for(var e=t.length;e--;)if(t[e].listener===n)return e;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var e=t.prototype,r=this,s=r.EventEmitter;e.getListeners=function(n){var r,e,t=this._getEvents();if(n instanceof RegExp){r={};for(e in t)t.hasOwnProperty(e)&&n.test(e)&&(r[e]=t[e])}else r=t[n]||(t[n]=[]);return r},e.flattenListeners=function(t){var e,n=[];for(e=0;e<t.length;e+=1)n.push(t[e].listener);return n},e.getListenersAsObject=function(n){var e,t=this.getListeners(n);return t instanceof Array&&(e={},e[n]=t),e||t},e.addListener=function(r,e){var t,n=this.getListenersAsObject(r),s="object"==typeof e;for(t in n)n.hasOwnProperty(t)&&-1===i(n[t],e)&&n[t].push(s?e:{listener:e,once:!1});return this},e.on=n("addListener"),e.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},e.once=n("addOnceListener"),e.defineEvent=function(e){return this.getListeners(e),this},e.defineEvents=function(t){for(var e=0;e<t.length;e+=1)this.defineEvent(t[e]);return this},e.removeListener=function(r,s){var n,e,t=this.getListenersAsObject(r);for(e in t)t.hasOwnProperty(e)&&(n=i(t[e],s),-1!==n&&t[e].splice(n,1));return this},e.off=n("removeListener"),e.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},e.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},e.manipulateListeners=function(r,t,i){var e,n,s=r?this.removeListener:this.addListener,o=r?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(e=i.length;e--;)s.call(this,t,i[e]);else for(e in t)t.hasOwnProperty(e)&&(n=t[e])&&("function"==typeof n?s.call(this,e,n):o.call(this,e,n));return this},e.removeEvent=function(e){var t,r=typeof e,n=this._getEvents();if("string"===r)delete n[e];else if(e instanceof RegExp)for(t in n)n.hasOwnProperty(t)&&e.test(t)&&delete n[t];else delete this._events;return this},e.removeAllListeners=n("removeEvent"),e.emitEvent=function(n,u){var r,e,t,i,o,s=this.getListenersAsObject(n);for(i in s)if(s.hasOwnProperty(i))for(r=s[i].slice(0),t=0;t<r.length;t++)e=r[t],e.once===!0&&this.removeListener(n,e.listener),o=e.listener.apply(this,u||[]),o===this._getOnceReturnValue()&&this.removeListener(n,e.listener);return this},e.trigger=n("emitEvent"),e.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},e.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},e._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},e._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return r.EventEmitter=s,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:r.EventEmitter=t}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul><div class=\"sidebar-nav-space\"></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["$type"]).w("</code></a>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div>").x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_1},{}).x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").x(ctx.getPath(false, ["symbol","classdesc"]),ctx,{"block":body_3},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_17},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_20},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_23},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_24},{}).x(ctx.getPath(false, ["template","options","symbolMeta"]),ctx,{"block":body_26},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_30},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_32,"block":body_34},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_7},{}).w("</table><br />");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk;}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.h("gt",ctx,{"else":body_18,"block":body_19},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_28},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_29},{}).w("</p>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_31},{});}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_33.__dustBody=!0;function body_34(chk,ctx){return chk;}body_34.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/?api","contentPath":null},{"id":"content:readme","type":"content","name":"readme","path":"/?content=readme","contentPath":"content/readme.html"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n * Google analytics tracking class\n */","meta":{"range":[146,1088],"filename":"Analytics.js","lineno":11,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000010","name":"Analytics","type":"ClassDeclaration","paramnames":["trackingId"]}},"classdesc":"Google analytics tracking class","name":"Analytics","longname":"Analytics","kind":"class","scope":"global","params":[{"type":{"names":["string"]},"description":"Google tracking id","name":"trackingId"}],"$longname":"Analytics","$members":[{"comment":"/**\n   * Records a node to google analytics\n   * @param {User|Member} user\n   * @param {string} node\n   * @param {...*} args arguments that will be passed  to the pageview after the node\n   */","meta":{"range":[728,1086],"filename":"Analytics.js","lineno":38,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000066","name":"Analytics#record","type":"MethodDefinition","paramnames":["user","node","args"]},"vars":{"":null}},"description":"Records a node to google analytics","params":[{"type":{"names":["User","Member"]},"name":"user"},{"type":{"names":["string"]},"name":"node"},{"type":{"names":["*"]},"variable":true,"description":"arguments that will be passed  to the pageview after the node","name":"args"}],"name":"record","longname":"Analytics#record","kind":"function","memberof":"Analytics","scope":"instance","$longname":"Analytics#record"}],"$constructor":{"comment":"/**\n   *\n   * @param {string} trackingId Google tracking id\n   */","meta":{"range":[234,335],"filename":"Analytics.js","lineno":16,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000013","name":"Analytics","type":"MethodDefinition","paramnames":["trackingId"]},"vars":{"":null}},"params":[{"type":{"names":["string"]},"description":"Google tracking id","name":"trackingId"}],"name":"Analytics","longname":"Analytics","kind":"class","scope":"global","undocumented":true,"$longname":"Analytics"}},{"comment":"/**\n   * Base database constructor, includes saving r to this.r\n   * @param {R} r rethinkdb object.\n   */","meta":{"range":[186,222],"filename":"BaseDB.js","lineno":11,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000156","name":"baseDB","type":"MethodDefinition","paramnames":["r"]},"vars":{"":null}},"description":"Base database constructor, includes saving r to this.r","params":[{"type":{"names":["R"]},"description":"rethinkdb object.","name":"r"}],"name":"baseDB","longname":"baseDB","kind":"class","scope":"global","$longname":"baseDB","$members":[{"comment":"/**\n   * Ensures a table exists in the database\n   * @param {String} tableName name of the table\n   * @param {Object} [tableOptions={}] options object to be passed to r.tableCreate\n   * @returns {Promise} true if table exists, table if not.\n   */","meta":{"range":[475,684],"filename":"BaseDB.js","lineno":21,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000167","name":"baseDB#ensureTable","type":"MethodDefinition","paramnames":["tableName","tableOptions"]},"vars":{"":null}},"description":"Ensures a table exists in the database","params":[{"type":{"names":["String"]},"description":"name of the table","name":"tableName"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"options object to be passed to r.tableCreate","name":"tableOptions"}],"returns":[{"type":{"names":["Promise"]},"description":"true if table exists, table if not."}],"name":"ensureTable","longname":"baseDB#ensureTable","kind":"function","memberof":"baseDB","scope":"instance","$longname":"baseDB#ensureTable"}]},{"comment":"/**\n * Command class\n * @typedef Command\n * @class\n * @property {Role} [role] Role mentioned by command\n * @property {Channel} [channel] Channel mentioned by command\n * @property {User} [user] User mentioned by command\n * @property {string} command command text\n * @property {string} commandNoS command text without trailing s\n * @property {string} prefix prefix used to trigger the command\n * @property {string[]} args arguments imputed with command\n * @property {Object} options options run with command, eg `--user Mario`\n * @property {string[]} flags flags run with command eg `-f`\n * @property {Message} msg message that triggered the command object's creation\n * @property {Channel} channel channel message that triggered command was sent in\n * @property {User} author user that sent the message that triggered the command\n * @property {Member} member member that sent the message that triggered the command\n * @property {Permissions} perms Permission object\n * @property {Raven} [raven] Raven Sentry library\n */","meta":{"filename":"Command.js","lineno":74,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"Command class","kind":"class","name":"Command","properties":[{"type":{"names":["Role"]},"optional":true,"description":"Role mentioned by command","name":"role"},{"type":{"names":["Channel"]},"optional":true,"description":"Channel mentioned by command","name":"channel"},{"type":{"names":["User"]},"optional":true,"description":"User mentioned by command","name":"user"},{"type":{"names":["string"]},"description":"command text","name":"command"},{"type":{"names":["string"]},"description":"command text without trailing s","name":"commandNoS"},{"type":{"names":["string"]},"description":"prefix used to trigger the command","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"arguments imputed with command","name":"args"},{"type":{"names":["Object"]},"description":"options run with command, eg `--user Mario`","name":"options"},{"type":{"names":["Array.<string>"]},"description":"flags run with command eg `-f`","name":"flags"},{"type":{"names":["Message"]},"description":"message that triggered the command object's creation","name":"msg"},{"type":{"names":["Channel"]},"description":"channel message that triggered command was sent in","name":"channel"},{"type":{"names":["User"]},"description":"user that sent the message that triggered the command","name":"author"},{"type":{"names":["Member"]},"description":"member that sent the message that triggered the command","name":"member"},{"type":{"names":["Permissions"]},"description":"Permission object","name":"perms"},{"type":{"names":["Raven"]},"optional":true,"description":"Raven Sentry library","name":"raven"}],"longname":"Command","scope":"global","$longname":"Command","$members":[{"comment":"/**\n   * Parses a message and returns a command if it is a command and false if not.\n   * @param {Array<string>} prefix\n   * @param {Message} message\n   * @param {Permissions} perms\n   * @param {Object} [options]\n   * @param {Raven} [options.raven]\n   * @param {boolean} [options.allowMention]\n   * @param {string} [options.botName] bot's name, used as prefix if the bot is mentioned\n   * @returns {Command | boolean}\n   */","meta":{"range":[5501,8266],"filename":"Command.js","lineno":163,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000516","name":"Command.parse","type":"MethodDefinition","paramnames":["prefix","message","perms","options"]},"vars":{"":null}},"description":"Parses a message and returns a command if it is a command and false if not.","params":[{"type":{"names":["Array.<string>"]},"name":"prefix"},{"type":{"names":["Message"]},"name":"message"},{"type":{"names":["Permissions"]},"name":"perms"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["Raven"]},"optional":true,"name":"options.raven"},{"type":{"names":["boolean"]},"optional":true,"name":"options.allowMention"},{"type":{"names":["string"]},"optional":true,"description":"bot's name, used as prefix if the bot is mentioned","name":"options.botName"}],"returns":[{"type":{"names":["Command","boolean"]}}],"name":"parse","longname":"Command.parse","kind":"function","memberof":"Command","scope":"static","$longname":"Command.parse"},{"comment":"/**\n   * Captures an exception and provides the Command object as context.\n   * @param {Object} context\n   * @param {Error} error\n   */","meta":{"range":[14230,14618],"filename":"Command.js","lineno":383,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001361","name":"Command#captureException","type":"MethodDefinition","paramnames":["context","error"]},"vars":{"":null}},"description":"Captures an exception and provides the Command object as context.","params":[{"type":{"names":["Object"]},"name":"context"},{"type":{"names":["Error"]},"name":"error"}],"name":"captureException","longname":"Command#captureException","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#captureException"},{"comment":"/**\n   * Logs any error edited by the promise to sentry and stops unhandled promise rejections\n   * @param promise\n   * @param {Object} [context] Context to be added to the error rejection\n   * @returns {*}\n   */","meta":{"range":[13697,13826],"filename":"Command.js","lineno":358,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001306","name":"Command#capturePromiseRejection","type":"MethodDefinition","paramnames":["promise","context"]},"vars":{"":null}},"description":"Logs any error edited by the promise to sentry and stops unhandled promise rejections","params":[{"name":"promise"},{"type":{"names":["Object"]},"optional":true,"description":"Context to be added to the error rejection","name":"context"}],"returns":[{"type":{"names":["*"]}}],"name":"capturePromiseRejection","longname":"Command#capturePromiseRejection","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#capturePromiseRejection"},{"comment":"/**\n   * Create a message in a text channel\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * @param {MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[11504,11653],"filename":"Command.js","lineno":313,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001110","name":"Command#createMessage","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Create a message in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user","params":[{"type":{"names":["MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"createMessage","longname":"Command#createMessage","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#createMessage"},{"comment":"/**\n   * Create a message in the channel the command was sent in. If the bot does not have permission to send messages it the channel it will deny all permissions in the channel.\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * @param {MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[12276,12464],"filename":"Command.js","lineno":325,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001134","name":"Command#createMessageAutoDeny","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Create a message in the channel the command was sent in. If the bot does not have permission to send messages it the channel it will deny all permissions in the channel.\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user","params":[{"type":{"names":["MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"createMessageAutoDeny","longname":"Command#createMessageAutoDeny","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#createMessageAutoDeny"},{"comment":"/**\n   * Replies to command in a text channel\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * Note: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object\n   * @param {MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[9956,10078],"filename":"Command.js","lineno":288,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001064","name":"Command#reply","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Replies to command in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\nNote: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object","params":[{"type":{"names":["MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"reply","longname":"Command#reply","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#reply"},{"comment":"/**\n   * Replies to command in a text channel. If the bot does not have permission to send messages it the channel it will deny all permissions in the channel.\n   * Note: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\n   * Note: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object\n   * @param {MessageContent | String} content {@link #Command~MessageContent|content} object\n   * @param {MessageFile} [file] A {@link #Command~MessageFile|file} object\n   * @param {MessageOptions} [options] A {@link #Command~MessageOptions|options} object\n   * @returns {Promise<Message>}\n   */","meta":{"range":[10855,11016],"filename":"Command.js","lineno":301,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001084","name":"Command#replyAutoDeny","type":"MethodDefinition","paramnames":["content","file","options"]},"vars":{"":null}},"description":"Replies to command in a text channel. If the bot does not have permission to send messages it the channel it will deny all permissions in the channel.\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user\nNote: This function will modify a string if passed to add a mention at the start for the author that sent the command, it will not modify arguments if passed an object","params":[{"type":{"names":["MessageContent","String"]},"description":"{@link #Command~MessageContent|content} object","name":"content"},{"type":{"names":["MessageFile"]},"optional":true,"description":"A {@link #Command~MessageFile|file} object","name":"file"},{"type":{"names":["MessageOptions"]},"optional":true,"description":"A {@link #Command~MessageOptions|options} object","name":"options"}],"returns":[{"type":{"names":["Promise.<Message>"]}}],"name":"replyAutoDeny","longname":"Command#replyAutoDeny","kind":"function","memberof":"Command","scope":"instance","$longname":"Command#replyAutoDeny"},{"comment":"/**\n * The object that describes the content of the message that will be sent to discord.\n * @typedef {String | Object} Command~MessageContent A string or object. If an object is passed:\n * @property {String} [content] A content string\n * @property {Boolean} [tts] Set the message TTS flag\n * @property {Boolean} [disableEveryone] Whether to filter @everyone/@here or not (overrides default)\n * @property {Object} [embed] An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure\n */","meta":{"filename":"Command.js","lineno":6,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"The object that describes the content of the message that will be sent to discord.","kind":"typedef","name":"MessageContent","type":{"names":["String","Object"]},"properties":[{"type":{"names":["String"]},"optional":true,"description":"A content string","name":"content"},{"type":{"names":["Boolean"]},"optional":true,"description":"Whether to filter @everyone/@here or not (overrides default)","name":"disableEveryone"},{"type":{"names":["Object"]},"optional":true,"description":"An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure","name":"embed"},{"type":{"names":["Boolean"]},"optional":true,"description":"Set the message TTS flag","name":"tts"}],"memberof":"Command","longname":"Command~MessageContent","scope":"inner","$longname":"Command~MessageContent"},{"comment":"/**\n * A file object\n * @typedef {Object} Command~MessageFile\n * @param {String} file A buffer containing file data\n * @param {String} name What to name the file\n */","meta":{"filename":"Command.js","lineno":15,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"A file object","kind":"typedef","name":"MessageFile","type":{"names":["Object"]},"params":[{"type":{"names":["String"]},"description":"A buffer containing file data","name":"file"},{"type":{"names":["String"]},"description":"What to name the file","name":"name"}],"memberof":"Command","longname":"Command~MessageFile","scope":"inner","$longname":"Command~MessageFile"},{"comment":"/**\n * A Message Options object\n * @typedef {Object} Command~MessageOptions\n */","meta":{"filename":"Command.js","lineno":22,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{}},"description":"A Message Options object","kind":"typedef","name":"MessageOptions","type":{"names":["Object"]},"memberof":"Command","longname":"Command~MessageOptions","scope":"inner","$longname":"Command~MessageOptions"}],"$constructor":{"comment":"/**\n   *\n   * @param {string} command command text\n   * @param {string} commandNoS command text without trailing s\n   * @param {string} prefix prefix used to trigger the command\n   * @param {string[]} args arguments imputed with command\n   * @param {Object} options options run with command, eg `--user Mario`\n   * @param {string[]} flags flags run with command eg `-f`\n   * @param {Message} msg message that triggered the command object's creation\n   * @param {Permissions} perms Permission object\n   * @param {Raven} [raven] Raven Sentry library\n   */","meta":{"range":[3491,3966],"filename":"Command.js","lineno":107,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100000310","name":"Command","type":"MethodDefinition","paramnames":["command","commandNoS","prefix","args","options","flags","msg","perms","raven"]},"vars":{"":null}},"params":[{"type":{"names":["string"]},"description":"command text","name":"command"},{"type":{"names":["string"]},"description":"command text without trailing s","name":"commandNoS"},{"type":{"names":["string"]},"description":"prefix used to trigger the command","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"arguments imputed with command","name":"args"},{"type":{"names":["Object"]},"description":"options run with command, eg `--user Mario`","name":"options"},{"type":{"names":["Array.<string>"]},"description":"flags run with command eg `-f`","name":"flags"},{"type":{"names":["Message"]},"description":"message that triggered the command object's creation","name":"msg"},{"type":{"names":["Permissions"]},"description":"Permission object","name":"perms"},{"type":{"names":["Raven"]},"optional":true,"description":"Raven Sentry library","name":"raven"}],"name":"Command","longname":"Command","kind":"class","scope":"global","$longname":"Command"}},{"comment":"/**\n * File based config system\n */","meta":{"range":[104,2748],"filename":"Config.js","lineno":9,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001459","name":"Config","type":"ClassDeclaration","paramnames":["name"]}},"classdesc":"File based config system","name":"Config","longname":"Config","kind":"class","scope":"global","description":"Standard File based config system","params":[{"type":{"names":["string"]},"description":"of config","name":"name"}],"$longname":"Config","$members":[{"comment":"/**\n   * Reads a value from the config\n   * @param {string} key to read\n   * @param {*} def Fallback\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server id to check permissions for\n   * @returns {*}\n   */","meta":{"range":[1526,2110],"filename":"Config.js","lineno":63,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001643","name":"Config#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"Reads a value from the config","params":[{"type":{"names":["string"]},"description":"to read","name":"key"},{"type":{"names":["*"]},"description":"Fallback","name":"def"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server id to check permissions for","name":"options.server"}],"returns":[{"type":{"names":["*"]}}],"name":"get","longname":"Config#get","kind":"function","memberof":"Config","scope":"instance","$longname":"Config#get"},{"comment":"/**\n   * Writes out the config file to disk\n   */","meta":{"range":[1131,1287],"filename":"Config.js","lineno":47,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001609","name":"Config#save","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Writes out the config file to disk","name":"save","longname":"Config#save","kind":"function","memberof":"Config","scope":"instance","params":[],"$longname":"Config#save"},{"comment":"/**\n   * Set a value\n   * @param {string} key to change\n   * @param {*} def value to set key to\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] id of discord to save config for null for global, not recommended for production\n   * see ConfigDB for production ready per discord configs\n   */","meta":{"range":[2431,2746],"filename":"Config.js","lineno":93,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001739","name":"Config#set","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"Set a value","params":[{"type":{"names":["string"]},"description":"to change","name":"key"},{"type":{"names":["*"]},"description":"value to set key to","name":"def"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"id of discord to save config for null for global, not recommended for production\nsee ConfigDB for production ready per discord configs","name":"options.server"}],"name":"set","longname":"Config#set","kind":"function","memberof":"Config","scope":"instance","$longname":"Config#set"}],"$constructor":{"comment":"/**\n   * Standard File based config system\n   * @constructor\n   * @param {string} name of config\n   */","meta":{"range":[226,494],"filename":"Config.js","lineno":15,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001462","name":"Config","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Standard File based config system","kind":"class","params":[{"type":{"names":["string"]},"description":"of config","name":"name"}],"name":"Config","longname":"Config","scope":"global","undocumented":true,"$longname":"Config"}},{"comment":"/**\n * Database based config file with feed based updating\n * @type {ConfigDB}\n */","meta":{"range":[177,8175],"filename":"ConfigDB.js","lineno":12,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001822","name":"ConfigDB","type":"ClassDeclaration","paramnames":["r","table","client"]}},"classdesc":"Database based config file with feed based updating","type":{"names":["ConfigDB"]},"name":"ConfigDB","longname":"ConfigDB","kind":"class","scope":"global","description":"create config instance.","params":[{"type":{"names":["Object"]},"description":"rethinkdbdash R","name":"r"},{"type":{"names":["string"]},"description":"the configs are stored in","name":"table"},{"type":{"names":["Eris"]},"description":"Eris Client","name":"client"}],"$longname":"ConfigDB","$members":[{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} key key in database\n   * @param {*} value default value\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"]\n   * @param {string} [options.conflict=\"update\"]\n   * @returns {Promise}\n   */","meta":{"range":[3763,4167],"filename":"ConfigDB.js","lineno":121,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002337","name":"ConfigDB#add","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"description":"key in database","name":"key"},{"type":{"names":["*"]},"description":"default value","name":"value"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","name":"options.server"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"update\"","name":"options.conflict"}],"returns":[{"type":{"names":["Promise"]}}],"name":"add","longname":"ConfigDB#add","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#add"},{"comment":"/**\n   * counts the array at key\n   * @param {string} key key to check\n   * @param {Object} [options] optional options object;\n   * @param {string} [options.server=\"*\"] server id to check record for.\n   * @returns {Promise<number>}\n   */","meta":{"range":[6022,6183],"filename":"ConfigDB.js","lineno":191,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002609","name":"ConfigDB#count","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"counts the array at key","params":[{"type":{"names":["string"]},"description":"key to check","name":"key"},{"type":{"names":["Object"]},"optional":true,"description":"optional options object;","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server id to check record for.","name":"options.server"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"count","longname":"ConfigDB#count","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#count"},{"comment":"/**\n   * Directly runs .update with a supplied object\n   * @param {Object} object\n   * @param {Object} [options = {}]\n   * @param {string} [options.server = \"*\"]\n   */","meta":{"range":[5461,5778],"filename":"ConfigDB.js","lineno":173,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002549","name":"ConfigDB#directSet","type":"MethodDefinition","paramnames":["object","options"]},"vars":{"":null}},"description":"Directly runs .update with a supplied object","params":[{"type":{"names":["Object"]},"name":"object"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","name":"options.server"}],"name":"directSet","longname":"ConfigDB#directSet","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#directSet"},{"comment":"/**\n   * get config value by key. returns a promise in preparation for config's being pulled from an external database.\n   * @param {string | null} key to check for\n   * @param {*} [def=null] default value if value is not in config.\n   * @param {Object} [options] takes an options value, supports {server: id} to get per server values of config settings.\n   * @param {string} [options.server=\"*\"] Id of the guild to get data for\n   * @return {*} that will be resolved to the config key\n   */","meta":{"range":[7134,7962],"filename":"ConfigDB.js","lineno":216,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002689","name":"ConfigDB#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"get config value by key. returns a promise in preparation for config's being pulled from an external database.","params":[{"type":{"names":["string","null"]},"description":"to check for","name":"key"},{"type":{"names":["*"]},"optional":true,"defaultvalue":null,"description":"default value if value is not in config.","name":"def"},{"type":{"names":["Object"]},"optional":true,"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"Id of the guild to get data for","name":"options.server"}],"returns":[{"type":{"names":["*"]},"description":"that will be resolved to the config key"}],"name":"get","longname":"ConfigDB#get","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#get"},{"comment":"/**\n   * Get a random item from the array contained in key\n   * @param {string} key database key to get array from\n   * @param {number} count number of entries to pick\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server to get records from\n   * @returns {Promise<Array<string>>}\n   */","meta":{"range":[6502,6636],"filename":"ConfigDB.js","lineno":204,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002653","name":"ConfigDB#getRandom","type":"MethodDefinition","paramnames":["key","count","options"]},"vars":{"":null}},"description":"Get a random item from the array contained in key","params":[{"type":{"names":["string"]},"description":"database key to get array from","name":"key"},{"type":{"names":["number"]},"description":"number of entries to pick","name":"count"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server to get records from","name":"options.server"}],"returns":[{"type":{"names":["Promise.<Array.<string>>"]}}],"name":"getRandom","longname":"ConfigDB#getRandom","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#getRandom"},{"comment":"/**\n   * Reloads a specific servers records from the db.\n   * @returns {Promise} resolves when all data is loaded.\n   */","meta":{"range":[1620,2739],"filename":"ConfigDB.js","lineno":64,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002026","name":"ConfigDB#reload","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Reloads a specific servers records from the db.","returns":[{"type":{"names":["Promise"]},"description":"resolves when all data is loaded."}],"name":"reload","longname":"ConfigDB#reload","kind":"function","memberof":"ConfigDB","scope":"instance","params":[],"$longname":"ConfigDB#reload"},{"comment":"/**\n   * Must be passed guilds to be added to the config, otherwise their data will not be fetched.\n   * @param {Guild} server Eris Guild object of new discord\n   * @returns {Promise} if adding the guilds data was successful.\n   */","meta":{"range":[769,965],"filename":"ConfigDB.js","lineno":33,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001862","name":"ConfigDB#serverCreated","type":"MethodDefinition","paramnames":["server"]},"vars":{"":null}},"description":"Must be passed guilds to be added to the config, otherwise their data will not be fetched.","params":[{"type":{"names":["Guild"]},"description":"Eris Guild object of new discord","name":"server"}],"returns":[{"type":{"names":["Promise"]},"description":"if adding the guilds data was successful."}],"name":"serverCreated","longname":"ConfigDB#serverCreated","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#serverCreated"},{"comment":"/**\n   * Stores the value in the current data and writes it out to file.\n   * @param {string | null} key key to store if none is defined object is written directly to the db.\n   * @param {*} value value to store at key\n   * @param {Object} [options] optional options object\n   * @param {string} [options.server=\"*\"] id of record to write to, typically server id.\n   * @param {boolean} [options.write=true] Save changes to database\n   */","meta":{"range":[4610,5286],"filename":"ConfigDB.js","lineno":143,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002422","name":"ConfigDB#set","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"Stores the value in the current data and writes it out to file.","params":[{"type":{"names":["string","null"]},"description":"key to store if none is defined object is written directly to the db.","name":"key"},{"type":{"names":["*"]},"description":"value to store at key","name":"value"},{"type":{"names":["Object"]},"optional":true,"description":"optional options object","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"id of record to write to, typically server id.","name":"options.server"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Save changes to database","name":"options.write"}],"name":"set","longname":"ConfigDB#set","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#set"},{"comment":"/**\n   * Saves a config record to the database\n   * @param {Object} [options] optional options object\n   * @param {string} [options.server = \"*\"] server who's record to record.\n   */","meta":{"range":[2928,3466],"filename":"ConfigDB.js","lineno":100,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002213","name":"ConfigDB#write","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Saves a config record to the database","params":[{"type":{"names":["Object"]},"optional":true,"description":"optional options object","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server who's record to record.","name":"options.server"}],"name":"write","longname":"ConfigDB#write","kind":"function","memberof":"ConfigDB","scope":"instance","$longname":"ConfigDB#write"}],"$constructor":{"comment":"/**\n   * create config instance.\n   * @constructor\n   * @param {Object} r rethinkdbdash R\n   * @param {string} table the configs are stored in\n   * @param {Eris} client Eris Client\n   */","meta":{"range":[385,531],"filename":"ConfigDB.js","lineno":20,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100001825","name":"ConfigDB","type":"MethodDefinition","paramnames":["r","table","client"]},"vars":{"":null}},"description":"create config instance.","kind":"class","params":[{"type":{"names":["Object"]},"description":"rethinkdbdash R","name":"r"},{"type":{"names":["string"]},"description":"the configs are stored in","name":"table"},{"type":{"names":["Eris"]},"description":"Eris Client","name":"client"}],"name":"ConfigDB","longname":"ConfigDB","scope":"global","undocumented":true,"$longname":"ConfigDB"}},{"comment":"/**\n   * Feeds database, uses a configDB as a base and has helped methods for manipulating it as a feed\n   * @constructor\n   * @param {Eris} client Eris Client\n   * @param {ConfigDB} configDB ConfigDB Instance setup with guild configs for the servers feeds operate on.\n   */","meta":{"range":[451,559],"filename":"feeds.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002851","name":"Feeds","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Feeds database, uses a configDB as a base and has helped methods for manipulating it as a feed","kind":"class","params":[{"type":{"names":["Eris"]},"description":"Eris Client","name":"client"},{"type":{"names":["ConfigDB"]},"description":"ConfigDB Instance setup with guild configs for the servers feeds operate on.","name":"configDB"}],"name":"Feeds","longname":"Feeds","scope":"global","$longname":"Feeds","$members":[{"comment":"/**\n   * Finds a feed\n   * @param {string} node Feed node to check\n   * @param {string} serverId Id of the Guild to check for.\n   * @returns {Array<string>} returns an array of channel IDs containing that feed node.\n   */","meta":{"range":[1788,2349],"filename":"feeds.js","lineno":53,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002969","name":"Feeds#find","type":"MethodDefinition","paramnames":["node","serverId"]},"vars":{"":null}},"description":"Finds a feed","params":[{"type":{"names":["string"]},"description":"Feed node to check","name":"node"},{"type":{"names":["string"]},"description":"Id of the Guild to check for.","name":"serverId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"returns an array of channel IDs containing that feed node."}],"name":"find","longname":"Feeds#find","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#find"},{"comment":"/**\n   * Fetches a list for a specific guild\n   * @param {string} guildID Id of the guild to check for.\n   * @returns {Object|Array|null}\n   */","meta":{"range":[2499,2557],"filename":"feeds.js","lineno":76,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003058","name":"Feeds#list","type":"MethodDefinition","paramnames":["guildID"]},"vars":{"":null}},"description":"Fetches a list for a specific guild","params":[{"type":{"names":["string"]},"description":"Id of the guild to check for.","name":"guildID"}],"returns":[{"type":{"names":["Object","Array","null"]}}],"name":"list","longname":"Feeds#list","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#list"},{"comment":"/**\n   * Set's a feed node\n   * @param {boolean} adding Adding or removing the node from the feed.\n   * @param {string} node Feed node to add or remove\n   * @param {string} channelId Channel id to apply the feed to\n   * @param {string} serverId Guild it to apply the feed change to.\n   */","meta":{"range":[854,1560],"filename":"feeds.js","lineno":30,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100002875","name":"Feeds#set","type":"MethodDefinition","paramnames":["adding","node","channelId","serverId"]},"vars":{"":null}},"description":"Set's a feed node","params":[{"type":{"names":["boolean"]},"description":"Adding or removing the node from the feed.","name":"adding"},{"type":{"names":["string"]},"description":"Feed node to add or remove","name":"node"},{"type":{"names":["string"]},"description":"Channel id to apply the feed to","name":"channelId"},{"type":{"names":["string"]},"description":"Guild it to apply the feed change to.","name":"serverId"}],"name":"set","longname":"Feeds#set","kind":"function","memberof":"Feeds","scope":"instance","$longname":"Feeds#set"}]},{"comment":"/**\n * Locates all channel ids that a feed points to\n * @param {Object} data raw feed data\n * @param {Array<string>} nodes Nodes to search\n * @param {Array<string>} array Array to add ids to\n * @returns {Array<string>} Array of channel ids feed node points to\n */","meta":{"range":[3939,4340],"filename":"feeds.js","lineno":129,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003186","name":"findNode","type":"FunctionDeclaration","paramnames":["data","nodes","array"]},"vars":{"":null,"node":"findNode~node","nodes":"findNode~nodes"}},"description":"Locates all channel ids that a feed points to","params":[{"type":{"names":["Object"]},"description":"raw feed data","name":"data"},{"type":{"names":["Array.<string>"]},"description":"Nodes to search","name":"nodes"},{"type":{"names":["Array.<string>"]},"description":"Array to add ids to","name":"array"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"Array of channel ids feed node points to"}],"name":"findNode","longname":"findNode","kind":"function","scope":"global","$longname":"findNode"},{"comment":"/**\n   * Webhook sender which can be used to bulk together messages, designed for use with Webhooks but sends text as a fallback\n   * @constructor\n   * @param {Object} e\n   * @param {Eris} e.client\n   */","meta":{"range":[320,511],"filename":"MessageSender.js","lineno":15,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003309","name":"MessageSender","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"Webhook sender which can be used to bulk together messages, designed for use with Webhooks but sends text as a fallback","kind":"class","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client"}],"name":"MessageSender","longname":"MessageSender","scope":"global","$longname":"MessageSender","$members":[{"comment":"/**\n   * empties the current queue\n   */","meta":{"range":[558,1811],"filename":"MessageSender.js","lineno":26,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003343","name":"MessageSender#emptyQueue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"empties the current queue","name":"emptyQueue","longname":"MessageSender#emptyQueue","kind":"function","memberof":"MessageSender","scope":"instance","params":[],"$longname":"MessageSender#emptyQueue"},{"comment":"/**\n   * Sends a message in the channel through webhooks\n   * @param {GuildChannel | String} channel to send the message in\n   * @param {string} text text to send in that channel if sending a webhook is not possible\n   * @param {Object} options\n   */","meta":{"range":[2636,2914],"filename":"MessageSender.js","lineno":75,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003609","name":"MessageSender#sendMessage","type":"MethodDefinition","paramnames":["channel","text","options"]},"vars":{"":null}},"description":"Sends a message in the channel through webhooks","params":[{"type":{"names":["GuildChannel","String"]},"description":"to send the message in","name":"channel"},{"type":{"names":["string"]},"description":"text to send in that channel if sending a webhook is not possible","name":"text"},{"type":{"names":["Object"]},"name":"options"}],"name":"sendMessage","longname":"MessageSender#sendMessage","kind":"function","memberof":"MessageSender","scope":"instance","$longname":"MessageSender#sendMessage"},{"comment":"/**\n   * Adds a message to the message sending queue possibly joining it to other messages\n   * @param {Channel | string} channel in which to send the message or webhook in URL form\n   * @param {string} text to send with the message\n   * @param {Object} options including title and other content\n   */","meta":{"range":[2119,2379],"filename":"MessageSender.js","lineno":62,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003556","name":"MessageSender#sendQueuedMessage","type":"MethodDefinition","paramnames":["channel","text","options"]},"vars":{"":null}},"description":"Adds a message to the message sending queue possibly joining it to other messages","params":[{"type":{"names":["Channel","string"]},"description":"in which to send the message or webhook in URL form","name":"channel"},{"type":{"names":["string"]},"description":"to send with the message","name":"text"},{"type":{"names":["Object"]},"description":"including title and other content","name":"options"}],"name":"sendQueuedMessage","longname":"MessageSender#sendQueuedMessage","kind":"function","memberof":"MessageSender","scope":"instance","$longname":"MessageSender#sendQueuedMessage"}]},{"comment":"/**\n   * Music database and utils\n   * @param {R} r\n   * @param {Object} [e={}]\n   * @param {string} [e.apiKey] youtube api key without this music queueing will be disabled\n   */","meta":{"range":[625,1040],"filename":"MusicDB.js","lineno":26,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003821","name":"MusicDB","type":"MethodDefinition","paramnames":["r","e"]},"vars":{"":null}},"description":"Music database and utils","params":[{"type":{"names":["R"]},"name":"r"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"e"},{"type":{"names":["string"]},"optional":true,"description":"youtube api key without this music queueing will be disabled","name":"e.apiKey"}],"name":"MusicDB","longname":"MusicDB","kind":"class","scope":"global","$longname":"MusicDB","$members":[{"comment":"/**\n   * Adds a song to a guild's queue\n   * @param {string} id\n   * @param {...Object} song\n   * @param {string} song.link\n   * @param {string} song.user_id\n   * @param {string} song.user_name\n   */","meta":{"range":[2061,2215],"filename":"MusicDB.js","lineno":77,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004018","name":"MusicDB#addSong","type":"MethodDefinition","paramnames":["id","song"]},"vars":{"":null}},"description":"Adds a song to a guild's queue","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["Object"]},"variable":true,"name":"song"},{"type":{"names":["string"]},"name":"song.link"},{"type":{"names":["string"]},"name":"song.user_id"},{"type":{"names":["string"]},"name":"song.user_name"}],"name":"addSong","longname":"MusicDB#addSong","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#addSong"},{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} id\n   * @param {number} index\n   * @param {string} userId\n   * @returns {Promise<number | boolean>} number of votes if added, false if unchanged\n   */","meta":{"range":[2657,3185],"filename":"MusicDB.js","lineno":99,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004094","name":"MusicDB#addVote","type":"MethodDefinition","paramnames":["id","index","userId"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["number"]},"name":"index"},{"type":{"names":["string"]},"name":"userId"}],"returns":[{"type":{"names":["Promise.<(number|boolean)>"]},"description":"number of votes if added, false if unchanged"}],"name":"addVote","longname":"MusicDB#addVote","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#addVote"},{"comment":"/**\n   * Binds to a voice and text chat.\n   * @param {string} id\n   * @param {string} guild_name\n   * @param {string} text\n   * @param {string} text_id\n   * @param {string} voice\n   * @param {string} voice_id\n   * @returns {Promise<*>}\n   */","meta":{"range":[3433,3656],"filename":"MusicDB.js","lineno":122,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004222","name":"MusicDB#bind","type":"MethodDefinition","paramnames":["id","guild_name","text","text_id","voice","voice_id"]},"vars":{"":null}},"description":"Binds to a voice and text chat.","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["string"]},"name":"guild_name"},{"type":{"names":["string"]},"name":"text"},{"type":{"names":["string"]},"name":"text_id"},{"type":{"names":["string"]},"name":"voice"},{"type":{"names":["string"]},"name":"voice_id"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"bind","longname":"MusicDB#bind","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#bind"},{"comment":"/**\n   * Clears out the queue\n   * @param {string} id guild id\n   * @param {Object} [options={}]\n   * @param {string} [options.user_id] if defined only songs queued by this user will be cleared\n   */","meta":{"range":[4113,4462],"filename":"MusicDB.js","lineno":148,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004301","name":"MusicDB#clearQueue","type":"MethodDefinition","paramnames":["id","options"]},"vars":{"":null}},"description":"Clears out the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["string"]},"optional":true,"description":"if defined only songs queued by this user will be cleared","name":"options.user_id"}],"name":"clearQueue","longname":"MusicDB#clearQueue","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#clearQueue"},{"comment":"/**\n   * Returns a count of the number of songs queued by a specific user\n   * @param {string} guild_id\n   * @param {string} user_id\n   * @returns {Promise<number>}\n   */","meta":{"range":[1376,1519],"filename":"MusicDB.js","lineno":55,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003931","name":"MusicDB#countVideosQueuedBy","type":"MethodDefinition","paramnames":["guild_id","user_id"]},"vars":{"":null}},"description":"Returns a count of the number of songs queued by a specific user","params":[{"type":{"names":["string"]},"name":"guild_id"},{"type":{"names":["string"]},"name":"user_id"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"countVideosQueuedBy","longname":"MusicDB#countVideosQueuedBy","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#countVideosQueuedBy"},{"comment":"/**\n   * Get's all songs in the queue\n   * @param args\n   * @returns {*}\n   */","meta":{"range":[1125,1199],"filename":"MusicDB.js","lineno":45,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003910","name":"MusicDB#getAll","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"Get's all songs in the queue","params":[{"name":"args","variable":true}],"returns":[{"type":{"names":["*"]}}],"name":"getAll","longname":"MusicDB#getAll","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getAll"},{"comment":"/**\n   * Get's a list of all the bound channels from a list of guild ids\n   * @param {Array<string>} guilds\n   */","meta":{"range":[1639,1855],"filename":"MusicDB.js","lineno":63,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100003966","name":"MusicDB#getBoundChannels","type":"MethodDefinition","paramnames":["guilds"]},"vars":{"":null}},"description":"Get's a list of all the bound channels from a list of guild ids","params":[{"type":{"names":["Array.<string>"]},"name":"guilds"}],"name":"getBoundChannels","longname":"MusicDB#getBoundChannels","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getBoundChannels"},{"comment":"/**\n   * Uses cache to get info for a hashed link\n   * @param {string} hashedLink\n   * @param {string} link\n   * @param {Object} [options]\n   * @param {boolean} [options.allowOutdated=false]\n   * @returns {Promise<Object>}\n   */","meta":{"range":[8098,8636],"filename":"MusicDB.js","lineno":276,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004907","name":"MusicDB#getCachingInfoHash","type":"MethodDefinition","paramnames":["hashedLink","link","options"]},"vars":{"":null}},"description":"Uses cache to get info for a hashed link","params":[{"type":{"names":["string"]},"name":"hashedLink"},{"type":{"names":["string"]},"name":"link"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"options.allowOutdated"}],"returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"getCachingInfoHash","longname":"MusicDB#getCachingInfoHash","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getCachingInfoHash"},{"comment":"/**\n   * Uses cache to get info for a link\n   * @param {string} link\n   * @param {Object} [options]\n   * @param {boolean} [options.allowOutdated=false]\n   * @returns {Promise}\n   */","meta":{"range":[7680,7863],"filename":"MusicDB.js","lineno":263,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004875","name":"MusicDB#getCachingInfoLink","type":"MethodDefinition","paramnames":["link","options"]},"vars":{"":null}},"description":"Uses cache to get info for a link","params":[{"type":{"names":["string"]},"name":"link"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"options.allowOutdated"}],"returns":[{"type":{"names":["Promise"]}}],"name":"getCachingInfoLink","longname":"MusicDB#getCachingInfoLink","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getCachingInfoLink"},{"comment":"/**\n   * Uses either ytdl-core or youtube-dl as needed to fetch info about the video\n   * @param args\n   * @returns {Object}\n   */","meta":{"range":[9010,9618],"filename":"MusicDB.js","lineno":303,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005017","name":"MusicDB#getInfoFromVid","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"Uses either ytdl-core or youtube-dl as needed to fetch info about the video","params":[{"name":"args","variable":true}],"returns":[{"type":{"names":["Object"]}}],"name":"getInfoFromVid","longname":"MusicDB#getInfoFromVid","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getInfoFromVid"},{"comment":"/**\n   * Get's the next video(s) in the queue\n   * @param {string} id guild id\n   * @param {number} [count=1] number of songs to fetch\n   * @param {number} [starting=0] index to start at, for pagination etc.\n   * @returns {*}\n   */","meta":{"range":[5319,5473],"filename":"MusicDB.js","lineno":189,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004495","name":"MusicDB#getNextVideos","type":"MethodDefinition","paramnames":["id","count","starting"]},"vars":{"":null}},"description":"Get's the next video(s) in the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"number of songs to fetch","name":"count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"index to start at, for pagination etc.","name":"starting"}],"returns":[{"type":{"names":["*"]}}],"name":"getNextVideos","longname":"MusicDB#getNextVideos","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getNextVideos"},{"comment":"/**\n   * Get's the next video(s) in the queue\n   * @param {string} id guild id\n   * @param {number} [count=1] number of songs to fetch\n   * @param {number} [starting=0] index to start at, for pagination etc.\n   * @returns {Object<{song: Object, info: Object}>}\n   */","meta":{"range":[5746,6049],"filename":"MusicDB.js","lineno":200,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004536","name":"MusicDB#getNextVideosCachedInfoAndVideo","type":"MethodDefinition","paramnames":["id","count","starting"]},"vars":{"":null}},"description":"Get's the next video(s) in the queue","params":[{"type":{"names":["string"]},"description":"guild id","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"number of songs to fetch","name":"count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"index to start at, for pagination etc.","name":"starting"}],"returns":[{"type":{"names":["Object.<{song: Object, info: Object}>"]}}],"name":"getNextVideosCachedInfoAndVideo","longname":"MusicDB#getNextVideosCachedInfoAndVideo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#getNextVideosCachedInfoAndVideo"},{"comment":"/**\n   * normalise a ytdl or youtube-dl info object\n   * @param {Object} info\n   */","meta":{"range":[10212,10888],"filename":"MusicDB.js","lineno":344,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005190","name":"MusicDB#normaliseInfo","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"normalise a ytdl or youtube-dl info object","params":[{"type":{"names":["Object"]},"name":"info"}],"name":"normaliseInfo","longname":"MusicDB#normaliseInfo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#normaliseInfo"},{"comment":"/**\n   * Normalises the info so it can be stored in the database\n   * @param info\n   * @returns {Object}\n   */","meta":{"range":[8753,8873],"filename":"MusicDB.js","lineno":291,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004997","name":"MusicDB#normaliseVidInfo","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"Normalises the info so it can be stored in the database","params":[{"name":"info"}],"returns":[{"type":{"names":["Object"]}}],"name":"normaliseVidInfo","longname":"MusicDB#normaliseVidInfo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#normaliseVidInfo"},{"comment":"/**\n   * Checks the queue length\n   * @param {string} id\n   * @returns {Promise<number>}\n   */","meta":{"range":[2316,2417],"filename":"MusicDB.js","lineno":88,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004063","name":"MusicDB#queueLength","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Checks the queue length","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["Promise.<number>"]}}],"name":"queueLength","longname":"MusicDB#queueLength","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#queueLength"},{"comment":"/**\n   * Shuffles the current Queue\n   * @param {string} id\n   */","meta":{"range":[4534,4687],"filename":"MusicDB.js","lineno":164,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004384","name":"MusicDB#shuffle","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Shuffles the current Queue","params":[{"type":{"names":["string"]},"name":"id"}],"name":"shuffle","longname":"MusicDB#shuffle","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#shuffle"},{"comment":"/**\n   * Removes a video from the queue and returns it\n   * @param id\n   * @param index\n   * @returns {Promise|Request|*}\n   */","meta":{"range":[4821,5081],"filename":"MusicDB.js","lineno":174,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004429","name":"MusicDB#spliceVideo","type":"MethodDefinition","paramnames":["id","index"]},"vars":{"":null}},"description":"Removes a video from the queue and returns it","params":[{"name":"id"},{"name":"index","defaultvalue":0}],"returns":[{"type":{"names":["Promise","Request","*"]}}],"name":"spliceVideo","longname":"MusicDB#spliceVideo","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#spliceVideo"},{"comment":"/**\n   * Unbinds the music player\n   * @param {string} id guild id to unbind\n   * @returns {Promise<*>}\n   */","meta":{"range":[3772,3907],"filename":"MusicDB.js","lineno":138,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100004264","name":"MusicDB#unbind","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Unbinds the music player","params":[{"type":{"names":["string"]},"description":"guild id to unbind","name":"id"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"unbind","longname":"MusicDB#unbind","kind":"function","memberof":"MusicDB","scope":"instance","$longname":"MusicDB#unbind"}]},{"comment":"/**\n * WorldState parser\n */","meta":{"range":[557,8089],"filename":"parseState.js","lineno":31,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005623","name":"ParseState","type":"ClassDeclaration","paramnames":[]}},"classdesc":"WorldState parser","name":"ParseState","longname":"ParseState","kind":"class","scope":"global","$longname":"ParseState","$members":[{"comment":"/**\n   * Builds an embed from an alert\n   * @param {Object} alert\n   * @param {string} platform\n   * @param {Object} state\n   * @returns {{embed: {title: string, fields: Array, footer: {text: string}, timestamp: string}, itemString: string}}\n   */","meta":{"range":[828,3324],"filename":"parseState.js","lineno":39,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005626","name":"ParseState.buildAlertEmbed","type":"MethodDefinition","paramnames":["alert","platform","state"]},"vars":{"":null}},"description":"Builds an embed from an alert","params":[{"type":{"names":["Object"]},"name":"alert"},{"type":{"names":["string"]},"name":"platform"},{"type":{"names":["Object"]},"name":"state"}],"returns":[{"type":{"names":["Object"]}}],"name":"buildAlertEmbed","longname":"ParseState.buildAlertEmbed","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.buildAlertEmbed"},{"comment":"/**\n   * Returns the faction name in pretty case from the string given in the worldstate api\n   * @param {string} string\n   * @returns {string}\n   */","meta":{"range":[6792,6940],"filename":"parseState.js","lineno":242,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006325","name":"ParseState.getFaction","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the faction name in pretty case from the string given in the worldstate api","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["string"]}}],"name":"getFaction","longname":"ParseState.getFaction","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getFaction"},{"comment":"/**\n   * Returns the info from the Paths.json file about a specific path if it exists, null if not\n   * @param {String} path\n   * @returns {Object|Null}\n   */","meta":{"range":[4798,4898],"filename":"parseState.js","lineno":171,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006178","name":"ParseState.getInfo","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Returns the info from the Paths.json file about a specific path if it exists, null if not","params":[{"type":{"names":["String"]},"name":"path"}],"returns":[{"type":{"names":["Object","Null"]}}],"name":"getInfo","longname":"ParseState.getInfo","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getInfo"},{"comment":"/**\n   * Get's a mission discription from it's language path\n   * @param {string} path\n   * @returns {string}\n   */","meta":{"range":[4347,4633],"filename":"parseState.js","lineno":152,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006132","name":"ParseState.getLevel","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Get's a mission discription from it's language path","params":[{"type":{"names":["string"]},"name":"path"}],"returns":[{"type":{"names":["string"]}}],"name":"getLevel","longname":"ParseState.getLevel","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getLevel"},{"comment":"/**\n   * Get's the locations a thing can drop from\n   * @param {string} part\n   */","meta":{"range":[3413,3616],"filename":"parseState.js","lineno":117,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006030","name":"ParseState.getLocations","type":"MethodDefinition","paramnames":["part"]},"vars":{"":null}},"description":"Get's the locations a thing can drop from","params":[{"type":{"names":["string"]},"name":"part"}],"name":"getLocations","longname":"ParseState.getLocations","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getLocations"},{"comment":"/**\n   * Returns the Mission type in pretty case from the string given in the worldstate api\n   * @param {string} string\n   * @returns {string}\n   */","meta":{"range":[7096,7248],"filename":"parseState.js","lineno":252,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006353","name":"ParseState.getMissionType","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the Mission type in pretty case from the string given in the worldstate api","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["string"]}}],"name":"getMissionType","longname":"ParseState.getMissionType","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getMissionType"},{"comment":"/**\n   * Get's the name of a item from it's filepath as provided in the worldstate\n   * @param {string} path\n   * @returns {string}\n   */","meta":{"range":[3760,4225],"filename":"parseState.js","lineno":131,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006065","name":"ParseState.getName","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Get's the name of a item from it's filepath as provided in the worldstate","params":[{"type":{"names":["string"]},"name":"path"}],"returns":[{"type":{"names":["string"]}}],"name":"getName","longname":"ParseState.getName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getName"},{"comment":"/**\n   * Get's a node from it's sort Name eg SolNode10\n   * @param {string} name The solar nodes name eg `SolNode10`\n   * @returns {Object} node data\n   */","meta":{"range":[6063,6235],"filename":"parseState.js","lineno":210,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006258","name":"ParseState.getNode","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get's a node from it's sort Name eg SolNode10","params":[{"type":{"names":["string"]},"description":"The solar nodes name eg `SolNode10`","name":"name"}],"returns":[{"type":{"names":["Object"]},"description":"node data"}],"name":"getNode","longname":"ParseState.getNode","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getNode"},{"comment":"/**\n   * Get's a node name from it's sort Name eg SolNode10\n   * @param {string} name The solar nodes name eg `SolNode10`\n   * @returns {string} node name\n   */","meta":{"range":[6402,6636],"filename":"parseState.js","lineno":225,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006286","name":"ParseState.getNodeName","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get's a node name from it's sort Name eg SolNode10","params":[{"type":{"names":["string"]},"description":"The solar nodes name eg `SolNode10`","name":"name"}],"returns":[{"type":{"names":["string"]},"description":"node name"}],"name":"getNodeName","longname":"ParseState.getNodeName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getNodeName"},{"comment":"/**\n   * Returns the substring of a sortie mission modifier in popper case without the sortie_modifier part\n   * @param {string} string\n   * @returns {*}\n   */","meta":{"range":[7414,7670],"filename":"parseState.js","lineno":262,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006379","name":"ParseState.getSortieModifier","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Returns the substring of a sortie mission modifier in popper case without the sortie_modifier part","params":[{"type":{"names":["string"]},"name":"string"}],"returns":[{"type":{"names":["*"]}}],"name":"getSortieModifier","longname":"ParseState.getSortieModifier","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getSortieModifier"},{"comment":"/**\n   * Get's the tier name;\n   * @param {string} i\n   * @returns {*}\n   */","meta":{"range":[7753,7812],"filename":"parseState.js","lineno":275,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006419","name":"ParseState.getTierName","type":"MethodDefinition","paramnames":["i"]},"vars":{"":null}},"description":"Get's the tier name;","params":[{"type":{"names":["string"]},"name":"i"}],"returns":[{"type":{"names":["*"]}}],"name":"getTierName","longname":"ParseState.getTierName","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.getTierName"},{"comment":"/**\n   * Converts item time into ISO date\n   * @param {{$date: {$numberLong: number}}} itemTime items time object\n   * @returns {string}\n   */","meta":{"range":[5797,5901],"filename":"parseState.js","lineno":201,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006240","name":"ParseState.toISOTime","type":"MethodDefinition","paramnames":["itemTime"]},"vars":{"":null}},"description":"Converts item time into ISO date","params":[{"type":{"names":["Object"]},"description":"items time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toISOTime","longname":"ParseState.toISOTime","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toISOTime"},{"comment":"/**\n   * Converts item time and worldstate to time difference in human readable format.\n   * @param {{Time: number}} state Current worldstate\n   * @param {{$date: {$numberLong: number}}} itemTime time object\n   * @returns {string}\n   */","meta":{"range":[5141,5267],"filename":"parseState.js","lineno":182,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006196","name":"ParseState.toTimeDifference","type":"MethodDefinition","paramnames":["state","itemTime"]},"vars":{"":null}},"description":"Converts item time and worldstate to time difference in human readable format.","params":[{"type":{"names":["Object"]},"description":"Current worldstate","name":"state"},{"type":{"names":["Object"]},"description":"time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toTimeDifference","longname":"ParseState.toTimeDifference","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toTimeDifference"},{"comment":"/**\n   * Converts item time and worldstate to time difference in human readable format.\n   * @param {{Time: number}} state Current worldstate\n   * @param {{$date: {$numberLong: number}}} itemTime items time object\n   * @returns {string}\n   */","meta":{"range":[5516,5648],"filename":"parseState.js","lineno":192,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006218","name":"ParseState.toTimeDifferenceInPast","type":"MethodDefinition","paramnames":["state","itemTime"]},"vars":{"":null}},"description":"Converts item time and worldstate to time difference in human readable format.","params":[{"type":{"names":["Object"]},"description":"Current worldstate","name":"state"},{"type":{"names":["Object"]},"description":"items time object","name":"itemTime"}],"returns":[{"type":{"names":["string"]}}],"name":"toTimeDifferenceInPast","longname":"ParseState.toTimeDifferenceInPast","kind":"function","memberof":"ParseState","scope":"static","$longname":"ParseState.toTimeDifferenceInPast"}]},{"comment":"/**\n * Permissions class\n * @prop {ConfigDB} permsDB\n * @type {Permissions}\n */","meta":{"range":[206,6428],"filename":"Permissions.js","lineno":14,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006482","name":"Permissions","type":"ClassDeclaration","paramnames":["permsDB","analytics"]}},"classdesc":"Permissions class","properties":[{"type":{"names":["ConfigDB"]},"name":"permsDB"}],"type":{"names":["Permissions"]},"name":"Permissions","longname":"Permissions","kind":"class","scope":"global","params":[{"type":{"names":["ConfigDB"]},"name":"permsDB"},{"name":"analytics"}],"$longname":"Permissions","$members":[{"comment":"/**\n   * Checks for user permissions based on a message\n   * @param {Message|Command} msg Eris Message to check\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @param {Object} [options] Check options, all options are optional.\n   * @param {string} [options.type=\"boolean\"] the type of value to look for, this defaults to boolean but any result of `typeof variable` should be valid\n   * @returns {boolean|*} returns boolean by default, if options.type is specified it will return false if not found, or a value with the type specified.\n   */","meta":{"range":[3148,3949],"filename":"Permissions.js","lineno":102,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006772","name":"Permissions#check","type":"MethodDefinition","paramnames":["msg","node","options"]},"vars":{"":null}},"description":"Checks for user permissions based on a message","params":[{"type":{"names":["Message","Command"]},"description":"Eris Message to check","name":"msg"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"},{"type":{"names":["Object"]},"optional":true,"description":"Check options, all options are optional.","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"boolean\"","description":"the type of value to look for, this defaults to boolean but any result of `typeof variable` should be valid","name":"options.type"}],"returns":[{"type":{"names":["boolean","*"]},"description":"returns boolean by default, if options.type is specified it will return false if not found, or a value with the type specified."}],"name":"check","longname":"Permissions#check","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#check"},{"comment":"/**\n   * Checks info pertaining to a node, not currently used\n   * @param {Message} msg Eris message to check for\n   * @param {string} node Permission node to check\n   * @returns {*}\n   */","meta":{"range":[5879,6425],"filename":"Permissions.js","lineno":179,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100007126","name":"Permissions#checkInfo","type":"MethodDefinition","paramnames":["msg","node"]},"vars":{"":null}},"description":"Checks info pertaining to a node, not currently used","params":[{"type":{"names":["Message"]},"description":"Eris message to check for","name":"msg"},{"type":{"names":["string"]},"description":"Permission node to check","name":"node"}],"returns":[{"type":{"names":["*"]}}],"name":"checkInfo","longname":"Permissions#checkInfo","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkInfo"},{"comment":"/**\n   * Checks for user permissions based on a user/member and channel\n   * @param {User | Member} user User object to use in permissions search.\n   * @param {GuildChannel} channel Channel to check for permissions in.\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @returns {boolean} returns True if the user has the permission, false if not.\n   */","meta":{"range":[4340,4910],"filename":"Permissions.js","lineno":135,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006934","name":"Permissions#checkUserChannel","type":"MethodDefinition","paramnames":["user","channel","node"]},"vars":{"":null}},"description":"Checks for user permissions based on a user/member and channel","params":[{"type":{"names":["User","Member"]},"description":"User object to use in permissions search.","name":"user"},{"type":{"names":["GuildChannel"]},"description":"Channel to check for permissions in.","name":"channel"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"}],"returns":[{"type":{"names":["boolean"]},"description":"returns True if the user has the permission, false if not."}],"name":"checkUserChannel","longname":"Permissions#checkUserChannel","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkUserChannel"},{"comment":"/**\n   * Checks for user permissions based on a user/member and guild\n   * @param {User | Member} user User object to use in permissions search.\n   * @param {Guild} guild Channel to check for permissions in.\n   * @param {string} node permission node to check, for example `\"music.*\"`\n   * @returns {boolean} returns True if the user has the permission, false if not.\n   */","meta":{"range":[5289,5684],"filename":"Permissions.js","lineno":160,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100007048","name":"Permissions#checkUserGuild","type":"MethodDefinition","paramnames":["user","guild","node"]},"vars":{"":null}},"description":"Checks for user permissions based on a user/member and guild","params":[{"type":{"names":["User","Member"]},"description":"User object to use in permissions search.","name":"user"},{"type":{"names":["Guild"]},"description":"Channel to check for permissions in.","name":"guild"},{"type":{"names":["string"]},"description":"permission node to check, for example `\"music.*\"`","name":"node"}],"returns":[{"type":{"names":["boolean"]},"description":"returns True if the user has the permission, false if not."}],"name":"checkUserGuild","longname":"Permissions#checkUserGuild","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#checkUserGuild"},{"comment":"/**\n   * Returns a function that when supplied with only a command object will check permissions.\n   * @param node\n   * @param options\n   * @returns {function(*=)}\n   */","meta":{"range":[2474,2568],"filename":"Permissions.js","lineno":90,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006756","name":"Permissions#genCheckCommand","type":"MethodDefinition","paramnames":["node","options"]},"vars":{"":null}},"description":"Returns a function that when supplied with only a command object will check permissions.","params":[{"name":"node"},{"name":"options"}],"returns":[{"type":{"names":["function"]}}],"name":"genCheckCommand","longname":"Permissions#genCheckCommand","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#genCheckCommand"},{"comment":"/**\n   * Sets a permission node\n   * @param {string} node\n   * @param {string} mode\n   * @param {Object} [options]\n   * @param {boolean} [options.write]\n   * @returns {*}\n   */","meta":{"range":[640,1267],"filename":"Permissions.js","lineno":38,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006512","name":"Permissions#set","type":"MethodDefinition","paramnames":["node","mode","options"]},"vars":{"":null}},"description":"Sets a permission node","params":[{"type":{"names":["string"]},"name":"node"},{"type":{"names":["string"]},"name":"mode"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["boolean"]},"optional":true,"name":"options.write"}],"returns":[{"type":{"names":["*"]}}],"name":"set","longname":"Permissions#set","kind":"function","memberof":"Permissions","scope":"instance","$longname":"Permissions#set"}],"$constructor":{"comment":"/**\n   *\n   * @param {ConfigDB} permsDB\n   * @param analytics\n   */","meta":{"range":[298,394],"filename":"Permissions.js","lineno":20,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100006485","name":"Permissions","type":"MethodDefinition","paramnames":["permsDB","analytics"]},"vars":{"":null}},"params":[{"type":{"names":["ConfigDB"]},"name":"permsDB"},{"name":"analytics"}],"name":"Permissions","longname":"Permissions","kind":"class","scope":"global","undocumented":true,"$longname":"Permissions"}},{"comment":"/**\n * @type {Player}\n */","meta":{"range":[566,18994],"filename":"Player.js","lineno":27,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008278","name":"Player","type":"ClassDeclaration","paramnames":["e"]}},"type":{"names":["Player"]},"name":"Player","longname":"Player","kind":"class","scope":"global","description":"new instant of music playing thing.","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client;"},{"type":{"names":["Config"]},"name":"e.config;"},{"type":{"names":["GuildChannel"]},"name":"e.textChannel;"},{"type":{"names":["GuildChannel"]},"name":"e.voiceChannel"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"e.debug"},{"type":{"names":["Raven"]},"name":"e.raven"},{"type":{"names":["MusicDB"]},"name":"e.musicDB"},{"type":{"names":["R"]},"description":"rethinkdb driver","name":"e.r"},{"type":{"names":["SlowSender"]},"name":"e.slowSender"},{"type":{"names":["string"]},"name":"e.apiKey"}],"$longname":"Player","$members":[{"comment":"/**\n   * Checks to see if the bot has permission to join and speak in the voice channel\n   * @param {GuildChannel} voice voice channel to check permissions of\n   * @returns {Boolean}\n   */","meta":{"range":[3584,3745],"filename":"Player.js","lineno":131,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008706","name":"Player#canInit","type":"MethodDefinition","paramnames":["voice"]},"vars":{"":null}},"description":"Checks to see if the bot has permission to join and speak in the voice channel","params":[{"type":{"names":["GuildChannel"]},"description":"voice channel to check permissions of","name":"voice"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"canInit","longname":"Player#canInit","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#canInit"},{"comment":"/**\n   * Destroys the current voice connection\n   * @param {boolean} leaveChannel\n   */","meta":{"range":[2439,2866],"filename":"Player.js","lineno":88,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008567","name":"Player#destroy","type":"MethodDefinition","paramnames":["leaveChannel"]},"vars":{"":null}},"description":"Destroys the current voice connection","params":[{"type":{"names":["boolean"]},"name":"leaveChannel"}],"name":"destroy","longname":"Player#destroy","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#destroy"},{"comment":"/**\n   * Enqueues a song\n   * @param {string} text\n   * @param {Member} member\n   * @param {Command} command\n   * @param {Object} [options] options\n   * @param {number} [options.limit] optional limit for songs the member can have queued\n   */","meta":{"range":[4942,5975],"filename":"Player.js","lineno":170,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008874","name":"Player#enqueue","type":"MethodDefinition","paramnames":["text","member","command","options"]},"vars":{"":null}},"description":"Enqueues a song","params":[{"type":{"names":["string"]},"name":"text"},{"type":{"names":["Member"]},"name":"member"},{"type":{"names":["Command"]},"name":"command"},{"type":{"names":["Object"]},"optional":true,"description":"options","name":"options"},{"type":{"names":["number"]},"optional":true,"description":"optional limit for songs the member can have queued","name":"options.limit"}],"name":"enqueue","longname":"Player#enqueue","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#enqueue"},{"comment":"/**\n   * enqueue a single song\n   * @param {string} song\n   * @param {Member} member\n   * @param {Command} command\n   */","meta":{"range":[6102,6650],"filename":"Player.js","lineno":205,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009025","name":"Player#enqueueSong","type":"MethodDefinition","paramnames":["song","member","command"]},"vars":{"":null}},"description":"enqueue a single song","params":[{"type":{"names":["string"]},"name":"song"},{"type":{"names":["Member"]},"name":"member"},{"type":{"names":["Command"]},"name":"command"}],"name":"enqueueSong","longname":"Player#enqueueSong","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#enqueueSong"},{"comment":"/**\n   * Get's the current songs quality in a nicely formatted string.\n   */","meta":{"range":[8895,9215],"filename":"Player.js","lineno":300,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009387","name":"Player#getQuality","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get's the current songs quality in a nicely formatted string.","name":"getQuality","longname":"Player#getQuality","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#getQuality"},{"comment":"/**\n   * Gets the current volume\n   * @returns {number}\n   */","meta":{"range":[3178,3225],"filename":"Player.js","lineno":114,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008668","name":"Player#getVolume","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Gets the current volume","returns":[{"type":{"names":["number"]}}],"name":"getVolume","longname":"Player#getVolume","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#getVolume"},{"comment":"/**\n   * Initialises the voice connection (join voice channel)\n   * @param {GuildChannel} voice voice channel to join\n   * @returns {Promise<Player>}\n   */","meta":{"range":[3907,4693],"filename":"Player.js","lineno":141,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008743","name":"Player#init","type":"MethodDefinition","paramnames":["voice"]},"vars":{"":null}},"description":"Initialises the voice connection (join voice channel)","params":[{"type":{"names":["GuildChannel"]},"description":"voice channel to join","name":"voice"}],"returns":[{"type":{"names":["Promise.<Player>"]}}],"name":"init","longname":"Player#init","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#init"},{"comment":"/**\n   * Pauses the current song\n   */","meta":{"range":[8532,8631],"filename":"Player.js","lineno":282,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009327","name":"Player#pause","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Pauses the current song","name":"pause","longname":"Player#pause","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#pause"},{"comment":"/**\n   * Returns an array containing arrays of table contents.\n   * @returns {Array<Array>}\n   */","meta":{"range":[9779,10346],"filename":"Player.js","lineno":335,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009504","name":"Player#prettyQueue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns an array containing arrays of table contents.","returns":[{"type":{"names":["Array.<Array>"]}}],"name":"prettyQueue","longname":"Player#prettyQueue","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#prettyQueue"},{"comment":"/**\n   * Gets the current time into the song in text form\n   * @returns {string}\n   */","meta":{"range":[9539,9675],"filename":"Player.js","lineno":327,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009474","name":"Player#prettyTime","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Gets the current time into the song in text form","returns":[{"type":{"names":["string"]}}],"name":"prettyTime","longname":"Player#prettyTime","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#prettyTime"},{"comment":"/**\n   * Resumes music streaming\n   */","meta":{"range":[8676,8812],"filename":"Player.js","lineno":291,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009353","name":"Player#resume","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resumes music streaming","name":"resume","longname":"Player#resume","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#resume"},{"comment":"/**\n   * Changes the current volume\n   * @param {number} volume\n   */","meta":{"range":[2942,3110],"filename":"Player.js","lineno":104,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008627","name":"Player#setVolume","type":"MethodDefinition","paramnames":["volume"]},"vars":{"":null}},"description":"Changes the current volume","params":[{"type":{"names":["number"]},"name":"volume"}],"name":"setVolume","longname":"Player#setVolume","kind":"function","memberof":"Player","scope":"instance","$longname":"Player#setVolume"},{"comment":"/**\n   * Shuffles the current queue\n   * @returns {string}\n   */","meta":{"range":[8393,8487],"filename":"Player.js","lineno":274,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009309","name":"Player#shuffle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Shuffles the current queue","returns":[{"type":{"names":["string"]}}],"name":"shuffle","longname":"Player#shuffle","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#shuffle"},{"comment":"/**\n   * Skips the current song.\n   */","meta":{"range":[9260,9446],"filename":"Player.js","lineno":314,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100009438","name":"Player#skipSong","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Skips the current song.","name":"skipSong","longname":"Player#skipSong","kind":"function","memberof":"Player","scope":"instance","params":[],"$longname":"Player#skipSong"}],"$constructor":{"comment":"/**\n   * new instant of music playing thing.\n   * @constructor\n   * @param {Object} e\n   * @param {Eris} e.client;\n   * @param {Config} e.config;\n   * @param {GuildChannel} e.textChannel;\n   * @param {GuildChannel} e.voiceChannel\n   * @param {boolean} [e.debug=false]\n   * @param {Raven} e.raven\n   * @param {MusicDB} e.musicDB\n   * @param {R} e.r rethinkdb driver\n   * @param {SlowSender} e.slowSender\n   * @param {string} e.apiKey\n   */","meta":{"range":[1045,2002],"filename":"Player.js","lineno":43,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100008282","name":"Player","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"new instant of music playing thing.","kind":"class","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client;"},{"type":{"names":["Config"]},"name":"e.config;"},{"type":{"names":["GuildChannel"]},"name":"e.textChannel;"},{"type":{"names":["GuildChannel"]},"name":"e.voiceChannel"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"e.debug"},{"type":{"names":["Raven"]},"name":"e.raven"},{"type":{"names":["MusicDB"]},"name":"e.musicDB"},{"type":{"names":["R"]},"description":"rethinkdb driver","name":"e.r"},{"type":{"names":["SlowSender"]},"name":"e.slowSender"},{"type":{"names":["string"]},"name":"e.apiKey"}],"name":"Player","longname":"Player","scope":"global","undocumented":true,"$longname":"Player"}},{"comment":"/**\n * returns s if seconds is greater than one.\n * @param {number} v\n * @returns {string}\n */","meta":{"range":[6968,7014],"filename":"utils.js","lineno":296,"columnno":0,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012978","name":"s","type":"FunctionDeclaration","paramnames":["v"]}},"description":"returns s if seconds is greater than one.","params":[{"type":{"names":["number"]},"name":"v"}],"returns":[{"type":{"names":["string"]}}],"name":"s","longname":"s","kind":"function","scope":"global","$longname":"s"},{"comment":"/**\n   * Slow sender, combines messages before sending, used within the giveaways module\n   * @param {Object} e\n   * @param {Eris} e.client\n   * @param {MessageSender} e.messageSender instantiated MessageSender\n   * @param {Config} e.config\n   */","meta":{"range":[350,521],"filename":"SlowSender.js","lineno":15,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100010932","name":"SlowSender","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"Slow sender, combines messages before sending, used within the giveaways module","params":[{"type":{"names":["Object"]},"name":"e"},{"type":{"names":["Eris"]},"name":"e.client"},{"type":{"names":["MessageSender"]},"description":"instantiated MessageSender","name":"e.messageSender"},{"type":{"names":["Config"]},"name":"e.config"}],"name":"SlowSender","longname":"SlowSender","kind":"class","scope":"global","$longname":"SlowSender","$members":[{"comment":"/**\n   * Sends a grouped message\n   * @param {Channel} channel\n   * @param {string} text\n   */","meta":{"range":[1803,2136],"filename":"SlowSender.js","lineno":61,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011160","name":"SlowSender#sendMessage","type":"MethodDefinition","paramnames":["channel","text"]},"vars":{"":null}},"description":"Sends a grouped message","params":[{"type":{"names":["Channel"]},"name":"channel"},{"type":{"names":["string"]},"name":"text"}],"name":"sendMessage","longname":"SlowSender#sendMessage","kind":"function","memberof":"SlowSender","scope":"instance","$longname":"SlowSender#sendMessage"}]},{"comment":"/**\n   * create config instance\n   * @constructor\n   * @param {Object} r\n   * @param {string} table the configs are stored in\n   * @param {string[]} ids of configs to load\n   */","meta":{"range":[296,434],"filename":"StandardDB.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011241","name":"StandardDB","type":"MethodDefinition","paramnames":["r","table","ids"]},"vars":{"":null}},"description":"create config instance","kind":"class","params":[{"type":{"names":["Object"]},"name":"r"},{"type":{"names":["string"]},"description":"the configs are stored in","name":"table"},{"type":{"names":["Array.<string>"]},"description":"of configs to load","name":"ids"}],"name":"StandardDB","longname":"StandardDB","scope":"global","$longname":"StandardDB","$members":[{"comment":"/**\n   * adds an item to an array, takes the key to the array\n   * @param {string} key\n   * @param {*} value\n   * @param {Object?} options\n   * @returns {Promise}\n   */","meta":{"range":[2975,3377],"filename":"StandardDB.js","lineno":96,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011691","name":"StandardDB#add","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"adds an item to an array, takes the key to the array","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["Object"]},"nullable":true,"name":"options"}],"returns":[{"type":{"names":["Promise"]}}],"name":"add","longname":"StandardDB#add","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#add"},{"comment":"/**\n   * counts the array at key\n   * @param {string} key\n   * @param {Object?} options\n   */","meta":{"range":[4188,4373],"filename":"StandardDB.js","lineno":138,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011865","name":"StandardDB#count","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"counts the array at key","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["Object"]},"nullable":true,"name":"options"}],"name":"count","longname":"StandardDB#count","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#count"},{"comment":"/**\n   * get config value by key. returns a promise in preparation for config's being pulled from an external database.\n   * @param {string | null} key key to store if none is defined object is written directly to the db.\n   * @param {*} def default value if value is not in config.\n   * @param {Object} options takes an options value, supports {server: id} to get per server values of config settings.\n   * @return {*} that will be resolved to the config key\n   */","meta":{"range":[5366,6194],"filename":"StandardDB.js","lineno":167,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011959","name":"StandardDB#get","type":"MethodDefinition","paramnames":["key","def","options"]},"vars":{"":null}},"description":"get config value by key. returns a promise in preparation for config's being pulled from an external database.","params":[{"type":{"names":["string","null"]},"description":"key to store if none is defined object is written directly to the db.","name":"key"},{"type":{"names":["*"]},"description":"default value if value is not in config.","name":"def"},{"type":{"names":["Object"]},"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"}],"returns":[{"type":{"names":["*"]},"description":"that will be resolved to the config key"}],"name":"get","longname":"StandardDB#get","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#get"},{"comment":"/**\n   * Get a random item from the array contained in key\n   * @param {string} key database key to get array from\n   * @param {number} count number of entries to pick\n   * @param {Object} [options]\n   * @param {string} [options.server=\"*\"] server to get records from\n   * @returns {Promise<Array<string>>}\n   */","meta":{"range":[4692,4894],"filename":"StandardDB.js","lineno":153,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011911","name":"StandardDB#getRandom","type":"MethodDefinition","paramnames":["key","count","options"]},"vars":{"":null}},"description":"Get a random item from the array contained in key","params":[{"type":{"names":["string"]},"description":"database key to get array from","name":"key"},{"type":{"names":["number"]},"description":"number of entries to pick","name":"count"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"*\"","description":"server to get records from","name":"options.server"}],"returns":[{"type":{"names":["Promise.<Array.<string>>"]}}],"name":"getRandom","longname":"StandardDB#getRandom","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#getRandom"},{"comment":"/**\n   * Reloads a specific servers records from the db.\n   */","meta":{"range":[1093,2199],"filename":"StandardDB.js","lineno":44,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011401","name":"StandardDB#reload","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Reloads a specific servers records from the db.","name":"reload","longname":"StandardDB#reload","kind":"function","memberof":"StandardDB","scope":"instance","params":[],"$longname":"StandardDB#reload"},{"comment":"/**\n   * Stores the value in the current data and writes it out to file.\n   * @param {string | null} key\n   * @param {*} value\n   * @param {Object?} options takes an options value, supports {server: id} to get per server values of config settings.\n   *\n   */","meta":{"range":[3642,4087],"filename":"StandardDB.js","lineno":117,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011776","name":"StandardDB#set","type":"MethodDefinition","paramnames":["key","value","options"]},"vars":{"":null}},"description":"Stores the value in the current data and writes it out to file.","params":[{"type":{"names":["string","null"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["Object"]},"nullable":true,"description":"takes an options value, supports {server: id} to get per server values of config settings.","name":"options"}],"name":"set","longname":"StandardDB#set","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#set"},{"comment":"/**\n   * Saves config to the database\n   * @param {Object} options of the server who's record is being saved.\n   */","meta":{"range":[2321,2800],"filename":"StandardDB.js","lineno":80,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100011580","name":"StandardDB#write","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Saves config to the database","params":[{"type":{"names":["Object"]},"description":"of the server who's record is being saved.","name":"options"}],"name":"write","longname":"StandardDB#write","kind":"function","memberof":"StandardDB","scope":"instance","$longname":"StandardDB#write"}]},{"comment":"/**\n * Created by macdja38 on 2016-07-12.\n */","meta":{"range":[51,77],"filename":"SlowSender.js","lineno":5,"columnno":4,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100010924","name":"utils","type":"CallExpression","value":""}},"description":"Created by macdja38 on 2016-07-12.","name":"utils","longname":"utils","kind":"member","scope":"global","params":[],"$longname":"utils"},{"comment":"/**\n * Created by macdja38 on 2017-03-12.\n */","meta":{"range":[51,77],"filename":"videoUtils.js","lineno":5,"columnno":4,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012998","name":"utils","type":"CallExpression","value":""}},"description":"Created by macdja38 on 2017-03-12.","name":"utils","longname":"utils","kind":"member","scope":"global","params":[],"$longname":"utils"},{"comment":"/**\n   * cleans text and add's codeblocks\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[3974,4051],"filename":"utils.js","lineno":165,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012555","name":"Utils.bubble","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"cleans text and add's codeblocks","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"bubble","longname":"Utils.bubble","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.bubble"},{"comment":"/**\n   * Nullifies codeblocks and Mentions\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[2842,3014],"filename":"utils.js","lineno":117,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012451","name":"Utils.clean","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"Nullifies codeblocks and Mentions","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"clean","longname":"Utils.clean","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.clean"},{"comment":"/**\n   * count differences between two strings.\n   * @param {string} s string 1\n   * @param {string} t string 2\n   * @returns {number} count of changes\n   */","meta":{"range":[5656,6869],"filename":"utils.js","lineno":239,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012703","name":"Utils.compare","type":"MethodDefinition","paramnames":["s","t"]},"vars":{"":null}},"description":"count differences between two strings.","params":[{"type":{"names":["string"]},"description":"string 1","name":"s"},{"type":{"names":["string"]},"description":"string 2","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"count of changes"}],"name":"compare","longname":"Utils.compare","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.compare"},{"comment":"/**\n   * Returns a promise that resolves in the supplied number of ms.\n   * @param {number} ms\n   * @returns {Promise}\n   */","meta":{"range":[5395,5492],"filename":"utils.js","lineno":227,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012687","name":"Utils.delay","type":"MethodDefinition","paramnames":["ms"]},"vars":{"":null}},"description":"Returns a promise that resolves in the supplied number of ms.","params":[{"type":{"names":["number"]},"name":"ms"}],"returns":[{"type":{"names":["Promise"]}}],"name":"delay","longname":"Utils.delay","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.delay"},{"comment":"/**\n   * returns user's name cleaned and with discriminator\n   * @param {User | Member} user\n   * @returns {string}\n   */","meta":{"range":[3142,3273],"filename":"utils.js","lineno":131,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012477","name":"Utils.fullName","type":"MethodDefinition","paramnames":["user"]},"vars":{"":null}},"description":"returns user's name cleaned and with discriminator","params":[{"type":{"names":["User","Member"]},"name":"user"}],"returns":[{"type":{"names":["string"]}}],"name":"fullName","longname":"Utils.fullName","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.fullName"},{"comment":"/**\n   * Returns user's name stripped of `, cleaned and with discriminator\n   * @param {User|Member} user\n   * @returns {string}\n   */","meta":{"range":[3414,3563],"filename":"utils.js","lineno":141,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012501","name":"Utils.fullNameB","type":"MethodDefinition","paramnames":["user"]},"vars":{"":null}},"description":"Returns user's name stripped of `, cleaned and with discriminator","params":[{"type":{"names":["User","Member"]},"name":"user"}],"returns":[{"type":{"names":["string"]}}],"name":"fullNameB","longname":"Utils.fullNameB","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.fullNameB"},{"comment":"/**\n   * Records an exception from eris\n   * @param {Promise} promise promise returned by eris\n   */","meta":{"range":[1212,1311],"filename":"utils.js","lineno":48,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012266","name":"Utils.handleErisRejection","type":"MethodDefinition","paramnames":["promise"]},"vars":{"":null}},"description":"Records an exception from eris","params":[{"type":{"names":["Promise"]},"description":"promise returned by eris","name":"promise"}],"name":"handleErisRejection","longname":"Utils.handleErisRejection","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.handleErisRejection"},{"comment":"/**\n   * Converts a discord id to a unix timestamp\n   * @param {string} id\n   * @returns {number}\n   */","meta":{"range":[2383,2538],"filename":"utils.js","lineno":97,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012424","name":"Utils.idToUnixTime","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Converts a discord id to a unix timestamp","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["number"]}}],"name":"idToUnixTime","longname":"Utils.idToUnixTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.idToUnixTime"},{"comment":"/**\n   * Converts a discord id to an ISO String\n   * @param {string} id\n   * @returns {string} time\n   */","meta":{"range":[2650,2738],"filename":"utils.js","lineno":108,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012435","name":"Utils.idToUTCString","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Converts a discord id to an ISO String","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["string"]},"description":"time"}],"name":"idToUTCString","longname":"Utils.idToUTCString","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.idToUTCString"},{"comment":"/**\n   * cleans text and add inline codeblocks.\n   * @param {string} text\n   * @returns {string}\n   */","meta":{"range":[4708,4774],"filename":"utils.js","lineno":199,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012631","name":"Utils.inline","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"cleans text and add inline codeblocks.","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"inline","longname":"Utils.inline","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.inline"},{"comment":"/**\n   * Searches a mediawiki wiki api for a string.\n   * @param {string} api\n   * @param {string} searchTerm\n   * @returns {Request}\n   */","meta":{"range":[5091,5264],"filename":"utils.js","lineno":218,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012658","name":"Utils.mediaWikiSearch","type":"MethodDefinition","paramnames":["api","searchTerm"]},"vars":{"":null}},"description":"Searches a mediawiki wiki api for a string.","params":[{"type":{"names":["string"]},"name":"api"},{"type":{"names":["string"]},"name":"searchTerm"}],"returns":[{"type":{"names":["Request"]}}],"name":"mediaWikiSearch","longname":"Utils.mediaWikiSearch","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.mediaWikiSearch"},{"comment":"/**\n   * strips ` from text and replaces them with visually similar characters\n   * @param {string} text\n   * @returns {*}\n   */","meta":{"range":[3698,3871],"filename":"utils.js","lineno":151,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012529","name":"Utils.removeBlocks","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"strips ` from text and replaces them with visually similar characters","params":[{"type":{"names":["string"]},"name":"text"}],"returns":[{"type":{"names":["*"]}}],"name":"removeBlocks","longname":"Utils.removeBlocks","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.removeBlocks"},{"comment":"/**\n   * convert seconds into short english time string eg 25m 32s\n   * @param {number} secs\n   * @returns {string}\n   */","meta":{"range":[1561,2273],"filename":"utils.js","lineno":65,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012299","name":"Utils.secondsToShortTime","type":"MethodDefinition","paramnames":["secs"]},"vars":{"":null}},"description":"convert seconds into short english time string eg 25m 32s","params":[{"type":{"names":["number"]},"name":"secs"}],"returns":[{"type":{"names":["string"]}}],"name":"secondsToShortTime","longname":"Utils.secondsToShortTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.secondsToShortTime"},{"comment":"/**\n   * convert seconds into english time string\n   * @param {number} secs\n   * @returns {string}\n   */","meta":{"range":[259,1105],"filename":"utils.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012107","name":"Utils.secondsToTime","type":"MethodDefinition","paramnames":["secs"]},"vars":{"":null}},"description":"convert seconds into english time string","params":[{"type":{"names":["number"]},"name":"secs"}],"returns":[{"type":{"names":["string"]}}],"name":"secondsToTime","longname":"Utils.secondsToTime","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.secondsToTime"},{"comment":"/**\n   * Shuffles an array using fisher-Yates shuffle\n   * @param {Array} array\n   * @returns {Array}\n   */","meta":{"range":[4165,4560],"filename":"utils.js","lineno":174,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012570","name":"Utils.shuffle","type":"MethodDefinition","paramnames":["array"]},"vars":{"":null}},"description":"Shuffles an array using fisher-Yates shuffle","params":[{"type":{"names":["Array"]},"name":"array"}],"returns":[{"type":{"names":["Array"]}}],"name":"shuffle","longname":"Utils.shuffle","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.shuffle"},{"comment":"/**\n   * strips ZWS from text\n   * @param {string|XML} text\n   * @returns {void|string|XML}\n   */","meta":{"range":[4878,4945],"filename":"utils.js","lineno":208,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100012646","name":"Utils.stripNull","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"strips ZWS from text","params":[{"type":{"names":["string","XML"]},"name":"text"}],"returns":[{"type":{"names":["void","string","XML"]}}],"name":"stripNull","longname":"Utils.stripNull","kind":"function","memberof":"Utils","scope":"static","$longname":"Utils.stripNull"},{"comment":"/**\n   * Get's a streamable URL from a track\n   * @returns {*}\n   */","meta":{"range":[1594,6001],"filename":"videoUtils.js","lineno":63,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013184","name":"videoUtils.getURL","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"Get's a streamable URL from a track","returns":[{"type":{"names":["*"]}}],"name":"getURL","longname":"videoUtils.getURL","kind":"function","memberof":"videoUtils","scope":"static","params":[],"$longname":"videoUtils.getURL"},{"comment":"/**\n   * prints pretty author info\n   * @param {{author: (string | Object)}} info\n   * @returns {string}\n   */","meta":{"range":[786,1033],"filename":"videoUtils.js","lineno":24,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013068","name":"videoUtils.prettyAuthor","type":"MethodDefinition","paramnames":["info"]},"vars":{"":null}},"description":"prints pretty author info","params":[{"type":{"names":["Object"]},"name":"info"}],"returns":[{"type":{"names":["string"]}}],"name":"prettyAuthor","longname":"videoUtils.prettyAuthor","kind":"function","memberof":"videoUtils","scope":"static","$longname":"videoUtils.prettyAuthor"},{"comment":"/**\n   * Instantiates a config object.\n   * @param {Object} options\n   * @param {string} options.fileName\n   */","meta":{"range":[340,627],"filename":"WarframeData.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100013907","name":"WarframeData","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Instantiates a config object.","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["string"]},"name":"options.fileName"}],"name":"WarframeData","longname":"WarframeData","kind":"class","scope":"global","$longname":"WarframeData","$members":[{"comment":"/**\n   * get a key from the config. will accept a fallBack value or throw if failThrow is defined.\n   * @param {string} key\n   * @param {Object | undefined} options\n   * @param {* | undefined} options.fallBack\n   * @param {boolean | undefined} options.failThrow\n   * @returns {*}\n   */","meta":{"range":[2156,2442],"filename":"WarframeData.js","lineno":69,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014125","name":"WarframeData#get","type":"MethodDefinition","paramnames":["key","options"]},"vars":{"":null}},"description":"get a key from the config. will accept a fallBack value or throw if failThrow is defined.","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["Object","undefined"]},"name":"options"},{"type":{"names":["*","undefined"]},"name":"options.fallBack"},{"type":{"names":["boolean","undefined"]},"name":"options.failThrow"}],"returns":[{"type":{"names":["*"]}}],"name":"get","longname":"WarframeData#get","kind":"function","memberof":"WarframeData","scope":"instance","$longname":"WarframeData#get"},{"comment":"/**\n   * Get's all the data\n   * @returns {Object}\n   */","meta":{"range":[2505,2543],"filename":"WarframeData.js","lineno":80,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014177","name":"WarframeData#getData","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get's all the data","returns":[{"type":{"names":["Object"]}}],"name":"getData","longname":"WarframeData#getData","kind":"function","memberof":"WarframeData","scope":"instance","params":[],"$longname":"WarframeData#getData"}]},{"comment":"/**\n   * WorldState object\n   * @constructor\n   * @param {R} r\n   * @param {boolean | number} autoFetch automatically update the state\n   * @param {Object} states\n   */","meta":{"range":[809,1130],"filename":"newWorldState.js","lineno":32,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005413","name":"worldState","type":"MethodDefinition","paramnames":["r","autoFetch","states"]},"vars":{"":null}},"description":"WorldState object","kind":"class","params":[{"type":{"names":["R"]},"name":"r"},{"type":{"names":["boolean","number"]},"description":"automatically update the state","name":"autoFetch","defaultvalue":false},{"type":{"names":["Object"]},"name":"states"}],"name":"worldState","longname":"worldState","scope":"global","$longname":"worldState","$members":[{"comment":"/**\n   * Fetches the latest worldState\n   * @returns {Promise<Object>}\n   */","meta":{"range":[1375,1621],"filename":"newWorldState.js","lineno":56,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005498","name":"worldState#fetch","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Fetches the latest worldState","returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"fetch","longname":"worldState#fetch","kind":"function","memberof":"worldState","scope":"instance","params":[],"$longname":"worldState#fetch"},{"comment":"/**\n   * Get's the current warframe worldState\n   * @returns {Promise<Object>}\n   */","meta":{"range":[1221,1292],"filename":"newWorldState.js","lineno":48,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100005478","name":"worldState#get","type":"MethodDefinition","paramnames":["platform"]},"vars":{"":null}},"description":"Get's the current warframe worldState","returns":[{"type":{"names":["Promise.<Object>"]}}],"name":"get","longname":"worldState#get","kind":"function","memberof":"worldState","scope":"instance","params":[],"$longname":"worldState#get"}]},{"comment":"/**\n   * Class for fetching the worldstate and reading it directly using promises, includes a cache\n   * @constructor\n   */","meta":{"range":[434,549],"filename":"worldState.js","lineno":17,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014276","name":"WorldState","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Class for fetching the worldstate and reading it directly using promises, includes a cache","kind":"class","name":"WorldState","longname":"WorldState","scope":"global","params":[],"$longname":"WorldState","$members":[{"comment":"/**\n   * Checks the age of the current cache\n   * @returns {number}\n   */","meta":{"range":[1262,1395],"filename":"worldState.js","lineno":54,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014384","name":"WorldState#age","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Checks the age of the current cache","returns":[{"type":{"names":["number"]}}],"name":"age","longname":"WorldState#age","kind":"function","memberof":"WorldState","scope":"instance","params":[],"$longname":"WorldState#age"},{"comment":"/**\n   * Get's the current worldstate\n   * @returns {Promise}\n   */","meta":{"range":[623,1182],"filename":"worldState.js","lineno":27,"columnno":2,"path":"C:\\Users\\macdja38\\WebstormProjects\\pvpcraft\\lib","code":{"id":"astnode100014303","name":"WorldState#get","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get's the current worldstate","returns":[{"type":{"names":["Promise"]}}],"name":"get","longname":"WorldState#get","kind":"function","memberof":"WorldState","scope":"instance","params":[],"$longname":"WorldState#get"}]}],"symbols":["Analytics","Analytics#record","baseDB","baseDB#ensureTable","Command","Command.parse","Command#captureException","Command#capturePromiseRejection","Command#createMessage","Command#createMessageAutoDeny","Command#reply","Command#replyAutoDeny","Config","Config#get","Config#save","Config#set","ConfigDB","ConfigDB#add","ConfigDB#count","ConfigDB#directSet","ConfigDB#get","ConfigDB#getRandom","ConfigDB#reload","ConfigDB#serverCreated","ConfigDB#set","ConfigDB#write","Feeds","Feeds#find","Feeds#list","Feeds#set","findNode","MessageSender","MessageSender#emptyQueue","MessageSender#sendMessage","MessageSender#sendQueuedMessage","MusicDB","MusicDB#addSong","MusicDB#addVote","MusicDB#bind","MusicDB#clearQueue","MusicDB#countVideosQueuedBy","MusicDB#getAll","MusicDB#getBoundChannels","MusicDB#getCachingInfoHash","MusicDB#getCachingInfoLink","MusicDB#getInfoFromVid","MusicDB#getNextVideos","MusicDB#getNextVideosCachedInfoAndVideo","MusicDB#normaliseInfo","MusicDB#normaliseVidInfo","MusicDB#queueLength","MusicDB#shuffle","MusicDB#spliceVideo","MusicDB#unbind","ParseState","ParseState.buildAlertEmbed","ParseState.getFaction","ParseState.getInfo","ParseState.getLevel","ParseState.getLocations","ParseState.getMissionType","ParseState.getName","ParseState.getNode","ParseState.getNodeName","ParseState.getSortieModifier","ParseState.getTierName","ParseState.toISOTime","ParseState.toTimeDifference","ParseState.toTimeDifferenceInPast","Permissions","Permissions#check","Permissions#checkInfo","Permissions#checkUserChannel","Permissions#checkUserGuild","Permissions#genCheckCommand","Permissions#set","Player","Player#canInit","Player#destroy","Player#enqueue","Player#enqueueSong","Player#getQuality","Player#getVolume","Player#init","Player#pause","Player#prettyQueue","Player#prettyTime","Player#resume","Player#setVolume","Player#shuffle","Player#skipSong","s","SlowSender","SlowSender#sendMessage","StandardDB","StandardDB#add","StandardDB#count","StandardDB#get","StandardDB#getRandom","StandardDB#reload","StandardDB#set","StandardDB#write","utils","utils","Utils.bubble","Utils.clean","Utils.compare","Utils.delay","Utils.fullName","Utils.fullNameB","Utils.handleErisRejection","Utils.idToUnixTime","Utils.idToUTCString","Utils.inline","Utils.mediaWikiSearch","Utils.removeBlocks","Utils.secondsToShortTime","Utils.secondsToTime","Utils.shuffle","Utils.stripNull","videoUtils.getURL","videoUtils.prettyAuthor","WarframeData","WarframeData#get","WarframeData#getData","worldState","WorldState","WorldState#age","worldState#fetch","WorldState#get","worldState#get","Command~MessageContent","Command~MessageFile","Command~MessageOptions"]}},"app":{"title":"pvpcraft","base":"/pvpcraft/","server":"github","meta":null,"entrance":"api","routing":{"method":"query","caseSensitive":true}},"template":{"name":"Docma Default Template","version":"1.7.0","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"title":"PvPCraft","sidebar":true,"collapsed":false,"badges":true,"search":true,"navbar":true,"navItems":[{"label":"Documentation","href":"#","iconClass":"ico-book"},{"label":"Demos","href":"https://github.com/macdja38/pvpcraft/tree/master/modules","iconClass":"ico-mouse-pointer"},{"label":"Download","iconClass":"ico-md ico-download","items":[{"label":"dev","href":"https://github.com/macdja38/pvpcraft/archive/dev.zip"},{"label":"release","href":"https://github.com/macdja38/pvpcraft/archive/master.zip"}]},{"label":"GitHub","href":"https://github.com/macdja38/pvpcraft","target":"_blank","iconClass":"ico-md ico-github"}],"outline":"flat","symbolMeta":false}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){e.getDocmaElem().innerHTML=t},e.loadContent=function(t){e.getContentElem().innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(!(t=(t||window.location.hash||"").replace(/^#/,"")))return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var t=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(e){var n=docma.utils.notate(e,"meta.code.value");if(void 0===n)return"";if("string"!=typeof n)return n;var i=docma.utils.notate(e,"type.names")||[];return!/['"`]/.test(n.slice(0,1))&&i.indexOf("String")>=0&&(1===i.length||-1===t.indexOf(n))?'"'+n+'"':n},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{e=(docma.utils.isConstructor(t)?"new-":"")+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function t(e){return e}var r={};r.notate=function(e,n){if("object"==typeof e){var t,i=Array.isArray(n)?n:n.split("."),a=i[0];if(a)return t=e[a],i.length>1?(i.shift(),r.notate(t,i)):t}},r.getName=function(e){if(e.alias){var t=n(r.notate(e,"meta.code.name")||"");if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},r.getLongName=function(e){var t=n(e.longname);if(e.alias){var i=n(r.notate(e,"meta.code.name")||"");if(!i)return t;var a=n(e.memberof||"");if(!a)return i;var o=new RegExp("^"+a+"[#\\.~:]"),s="instance"===e.scope?"#":".";return o.test(i)?i:a+s+i}return t},r.getFullName=r.getLongName,r.getCodeName=function(e){return n(r.notate(e,"meta.code.name")||"")||r.getLongName(e)},r.getSymbolByName=function(e,n){var t,i;for(t=0;t<e.length;t++){if(i=e[t],i.name===n||i.longname===n||r.getFullName(i)===n)return i;if(i.$members){var a=r.getSymbolByName(i.$members,n);if(a)return a}}return null},r.isDeprecated=function(e){return e.deprecated},r.isGlobal=function(e){return"global"===e.scope},r.isNamespace=function(e){return"namespace"===e.kind},r.isModule=function(e){return"module"===e.kind},r.isClass=function(e){return!r.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===r.notate(e,"meta.code.type"))},r.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===r.notate(e,"meta.code.type")},r.isStaticMember=function(e){return"static"===e.scope},r.isStatic=r.isStaticMember,r.isInner=function(e){return"inner"===e.scope},r.isInstanceMember=function(e){return"instance"===e.scope},r.isMethod=function(e){var n=r.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},r.isFunction=r.isMethod,r.isInstanceMethod=function(e){return r.isInstanceMember(e)&&r.isMethod(e)},r.isStaticMethod=function(e){return r.isStaticMember(e)&&r.isMethod(e)},r.isProperty=function(e){return"member"===e.kind},r.isInstanceProperty=function(e){return r.isInstanceMember(e)&&r.isProperty(e)},r.isStaticProperty=function(e){return r.isStaticMember(e)&&r.isProperty(e)},r.isTypeDef=function(e){return"typedef"===e.kind},r.isCustomType=r.isTypeDef,r.isEnum=function(e){return e.isEnum},r.isReadOnly=function(e){return e.readonly},r.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},r.isPrivate=function(e){return"private"===e.access},r.isProtected=function(e){return"protected"===e.access},r.isUndocumented=function(e){return!e.comments},r.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},r.getTypes=function(e){if("class"===e.kind)return"class";var n=r.notate(e,"type.names")||[];return n=n.map(function(e){return e.replace(/\.</g,"<")}).join("|"),e.isEnum?"enum<"+n+">":n},r.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var t,i=n.reduce(function(e,n){return t=r.notate(n,"type.names"),Array.isArray(t)?e.concat(t):e},[]);return i.length>0?i.join("|"):"void"},r.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},r.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,t){return r.normalizeTabs(r._wrapEscapeCode(t,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,t){return r._wrapEscapeCode(t)})},r.parseNewLines=function(e,n){return n=n||{},r._tokenize(e,function(e,t){if(t)return e;var r=e.split(/\n{2,}/);return r.length<=1&&n.keepIfSingle?e:r.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},r.parseLinks=function(e,n){n=n||{};var t=/\{@link +([^}]*?)\}/g,i=e.replace(t,function(e,t){var r,i,a=t.split("|");return 1===a.length?r=i=a[0].trim():(r=a[0].trim(),i=a[1].trim()),'<a href="'+r+'"'+(n.target?' target="'+n.target+'"':"")+">"+i+"</a>"});return r.parseTicks(i)},r.parse=function(e,n){return n=n||{},e=r.trimLeft(e),e=r.parseNewLines(e,n),e=r.parseTicks(e),r.parseLinks(e,n)},r.normalizeTabs=function(e){var n=e.match(/^\s*/gm),t=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(t=Math.min(e.length,t))}),t!==1/0){var r=new RegExp("^\\s{"+t+"}","g");e=e.replace(r,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,t){return i=t.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},r.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=r.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return r.isConstructor(e)&&(n+=" constructor"),r.isMethod(e)&&(n+=" method"),r.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},r.getCodeFileInfo=function(e){return{filename:r.notate(e,"meta.filename"),lineno:r.notate(e,"meta.lineno"),path:r.notate(e,"meta.path")}},r.listType=function(e){return e.map(function(e){return r._wrapEscapeCode(e)}).join(", ")},r.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,t=e.map(function(e){return n=r.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),r._wrapEscapeCode(e.type.names.join("|"))+n});return t.length>1?"<ul>\n"+t.join("</li>\n<li>")+"\n</ul>":t},r._find=function(e,n){if(!e||!n)return null;var t,r,i=null;for(t=0;t<e.length;t++)if((r=e[t])&&"object"==typeof r){for(var a in n)if(void 0!==n[a]&&n.hasOwnProperty(a)){if(n[a]!==r[a]){i=null;break}i=r}if(i)break}return i},r._assign=function(e,n,t){e=e||{};var r;for(r in n)n.hasOwnProperty(r)&&(t?Object.defineProperty(e,r,{enumerable:!0,value:n[r]}):e[r]=n[r]);return e},r._values=function(e){if(Array.isArray(e))return e;var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t},r._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},r._tokenize=function(e,n){"function"!=typeof n&&(n=t);if(e.indexOf("```")<0)return[n(e,!1)];var r,i="```".length,a="",o="",s=[],u=!1;for(r=0;r<e.length;r++)a+=e[r],o+=e[r],a.length>i&&(a=a.slice(-i)),"```"===a&&(u=!u,u?(s.push(n(o.slice(0,-i),!1)),o=a):(s.push(n(o,!0)),o=""));return s},docma.utils=r}();
!function(){function t(t,e){l.info("Event:",t,e?e[0]:""),y.trigger(t,e)}function e(t,n){if(n&&!(u.indexOf(n)<0)){if(t)docma.app.routing.caseSensitive||(t=t.toLowerCase());else{if(n!==e.Type.API)return;t=f}var o=p._find(docma.routes,{type:n,name:t});o&&p._assign(this,o)}}function n(t,e){dust.render(t,docma,function(t,n){if(t)throw t;m.loadCompiledContent(n),"function"==typeof e&&e()})}function o(){t(docma.Event.Render,[docma.currentRoute]),d&&(t(docma.Event.Ready),d=!1)}function r(o,r){docma._.currentRoute=e.create(null),n(docma._.partials.notFound,function(){if(t(docma.Event.Render,[null]),m.scrollTo(),"function"==typeof r)return r(404);throw new Error("Page or content not found for route: "+JSON.stringify(o))})}function a(){if(s){var t=sessionStorage.getItem("redirectPath")||null;if(t)return sessionStorage.removeItem("redirectPath"),l.info("Redirecting to:",t),page.redirect(t),!0}return!1}function i(t){var e=t||window.location.search;return/^[?&]/.test(e)&&(e=e.slice(1)),e||null}var c,u,d=!1,s="path"===docma.app.routing.method,f="_def_",p=docma.utils,m=docma.dom,l={};["log","info","warn","error"].forEach(function(t){!function(){l[t]=function(){docma._.logsEnabled&&console[t].apply(console,arguments)}}()}),docma.addFilter=function(t,e){if(docma.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,docma},docma.removeFilter=function(t){return delete dust.filters[t],docma},docma.filterExists=function(t){return"function"==typeof dust.filters[t]};var y=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(t,e){return y.on.apply(y,arguments),docma},docma.once=function(){return y.once.apply(y,arguments),docma},docma.off=function(){return y.off.apply(y,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),e.Type={API:"api",CONTENT:"content"},u=p._values(e.Type),e.prototype.exists=function(){return Boolean(this.id)},e.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},e.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},e.prototype.apply=function(){return this.type===e.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),t(docma.Event.Route,[this]),docma.render(this),this},e.prototype.toString=function(){return JSON.stringify(this)},e.create=function(t,n){return new e(t,n)},e.fromID=function(t){if("string"!=typeof t)return l.warn("Route ID is not a string: "+t),new e(null);var n=t.split(":");return new e(n[1],n[0])},e.fromQuery=function(t){if(!t)return new e(null);var n=t.split("&")[0].split("="),o=n[0].toLowerCase();return new e(n[1],o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return e}}),docma.fetch=function(t,e){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return l.log("XHR GET:",n.status,t),e(n.status,o)}},n.open("GET",t,!0),n.send()},docma.render=function(t,a){if(!t||!t.exists())return r(t,a);if(!t.isEqualTo(docma.currentRoute)){docma._.currentRoute=t;var i="function"==typeof a;t.type===e.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),m.fixAnchors(),m.scrollTo()}):docma.fetch(t.contentPath,function(e,c){if(404===e)return r(t,a);n(docma._.partials.content,function(){m.loadContent(c),o(),i&&a(e),m.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(t,n){var o=t.params.apiName||f,r=e.create(o,e.Type.API);if(!r||!r.exists())return n();r.apply()}),page("(/)?:content",function(t,n){var o=t.params.content,r=e.create(o,e.Type.CONTENT);if(!r||!r.exists())return n();r.apply()})),page("(/)?",function(t,n){a()||setTimeout(function(){var o,r=i(t.querystring);if(s){if(r)return n();o=c}else l.log("Query-string:",r),o=r?e.fromQuery(r):c;if(!o||!o.exists())return n();o.isCurrent()||o.apply()},100)}),page("*",function(t){l.warn("Unknown Route:",t.path),e.create(null).apply()}),l.info("Docma SPA Configuration:"),l.info("App Title:          ",docma.app.title),l.info("Routing Method:     ",docma.app.routing.method),l.info("App Server:         ",docma.app.server),l.info("Base Path:          ",docma.app.base),l.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=e.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),l.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);